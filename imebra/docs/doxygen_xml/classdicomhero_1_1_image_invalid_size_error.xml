<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classdicomhero_1_1_image_invalid_size_error" kind="class" language="C++" prot="public">
    <compoundname>dicomhero::ImageInvalidSizeError</compoundname>
    <basecompoundref refid="classdicomhero_1_1_image_error" prot="public" virt="non-virtual">dicomhero::ImageError</basecompoundref>
    <includes local="no">exceptions.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdicomhero_1_1_image_invalid_size_error_1ad2a7fe575570c7d7eb41b3514dbe4995" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>dicomhero::ImageInvalidSizeError::ImageInvalidSizeError</definition>
        <argsstring>(const std::string &amp;message)</argsstring>
        <name>ImageInvalidSizeError</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to store into the exception </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/exceptions.h" line="1096" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_image_invalid_size_error_1a9427ffdd940a1b846d26093bc52d80f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dicomhero::ImageInvalidSizeError::ImageInvalidSizeError</definition>
        <argsstring>(const ImageInvalidSizeError &amp;source)</argsstring>
        <name>ImageInvalidSizeError</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_image_invalid_size_error" kindref="compound">ImageInvalidSizeError</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/exceptions.h" line="1098" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_image_invalid_size_error_1a376a2a44a89addcf3dc0bd13f5928c65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_image_invalid_size_error" kindref="compound">ImageInvalidSizeError</ref> &amp;</type>
        <definition>ImageInvalidSizeError&amp; dicomhero::ImageInvalidSizeError::operator=</definition>
        <argsstring>(const ImageInvalidSizeError &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_image_invalid_size_error" kindref="compound">ImageInvalidSizeError</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/exceptions.h" line="1100" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_image_invalid_size_error_1aceace917c08f53e81279563425cee9ca" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="virtual">
        <type></type>
        <definition>virtual dicomhero::ImageInvalidSizeError::~ImageInvalidSizeError</definition>
        <argsstring>() noexcept</argsstring>
        <name>~ImageInvalidSizeError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/exceptions.h" line="1102" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This exception is thrown when an invalid size in pixels is specified in the <ref refid="classdicomhero_1_1_image" kindref="compound">Image</ref> constructor. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>dicomhero::ImageInvalidSizeError</label>
        <link refid="classdicomhero_1_1_image_invalid_size_error"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>dicomhero::ImageError</label>
        <link refid="classdicomhero_1_1_image_error"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>dicomhero::ImageInvalidSizeError</label>
        <link refid="classdicomhero_1_1_image_invalid_size_error"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>dicomhero::ImageError</label>
        <link refid="classdicomhero_1_1_image_error"/>
      </node>
    </collaborationgraph>
    <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/exceptions.h" line="1088" column="1" bodyfile="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/exceptions.h" bodystart="1089" bodyend="1103"/>
    <listofallmembers>
      <member refid="classdicomhero_1_1_image_error_1aa0c288749d1466f1cb11ae04bfc75c72" prot="public" virt="non-virtual"><scope>dicomhero::ImageInvalidSizeError</scope><name>ImageError</name></member>
      <member refid="classdicomhero_1_1_image_error_1a75428c500a9e1706fe0711cd56590fad" prot="public" virt="non-virtual"><scope>dicomhero::ImageInvalidSizeError</scope><name>ImageError</name></member>
      <member refid="classdicomhero_1_1_image_invalid_size_error_1ad2a7fe575570c7d7eb41b3514dbe4995" prot="public" virt="non-virtual"><scope>dicomhero::ImageInvalidSizeError</scope><name>ImageInvalidSizeError</name></member>
      <member refid="classdicomhero_1_1_image_invalid_size_error_1a9427ffdd940a1b846d26093bc52d80f3" prot="public" virt="non-virtual"><scope>dicomhero::ImageInvalidSizeError</scope><name>ImageInvalidSizeError</name></member>
      <member refid="classdicomhero_1_1_image_invalid_size_error_1a376a2a44a89addcf3dc0bd13f5928c65" prot="public" virt="non-virtual"><scope>dicomhero::ImageInvalidSizeError</scope><name>operator=</name></member>
      <member refid="classdicomhero_1_1_image_error_1adecd6a8ebd24623dea0ba03529f881d7" prot="public" virt="non-virtual" ambiguityscope="dicomhero::ImageError::"><scope>dicomhero::ImageInvalidSizeError</scope><name>operator=</name></member>
      <member refid="classdicomhero_1_1_image_error_1a36c9f345715542afe1198d12171df657" prot="public" virt="virtual"><scope>dicomhero::ImageInvalidSizeError</scope><name>~ImageError</name></member>
      <member refid="classdicomhero_1_1_image_invalid_size_error_1aceace917c08f53e81279563425cee9ca" prot="public" virt="virtual"><scope>dicomhero::ImageInvalidSizeError</scope><name>~ImageInvalidSizeError</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
