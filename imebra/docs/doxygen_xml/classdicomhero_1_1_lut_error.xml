<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classdicomhero_1_1_lut_error" kind="class" language="C++" prot="public">
    <compoundname>dicomhero::LutError</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::runtime_error</basecompoundref>
    <derivedcompoundref refid="classdicomhero_1_1_lut_corrupted_error" prot="public" virt="non-virtual">dicomhero::LutCorruptedError</derivedcompoundref>
    <includes local="no">exceptions.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdicomhero_1_1_lut_error_1a370ac400d9851964bd44d725d12b4d3a" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>dicomhero::LutError::LutError</definition>
        <argsstring>(const std::string &amp;message)</argsstring>
        <name>LutError</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to store into the exception </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/exceptions.h" line="54" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_lut_error_1aab9e77db9b19b0cf8da2816bb8663d6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dicomhero::LutError::LutError</definition>
        <argsstring>(const LutError &amp;source)</argsstring>
        <name>LutError</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_lut_error" kindref="compound">LutError</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/exceptions.h" line="56" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_lut_error_1abecc6147acfdbf00e77494a3224e1c90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_lut_error" kindref="compound">LutError</ref> &amp;</type>
        <definition>LutError&amp; dicomhero::LutError::operator=</definition>
        <argsstring>(const LutError &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_lut_error" kindref="compound">LutError</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/exceptions.h" line="58" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_lut_error_1a8a7e26e9b26ce8d548977fcb58822c90" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="virtual">
        <type></type>
        <definition>virtual dicomhero::LutError::~LutError</definition>
        <argsstring>() noexcept</argsstring>
        <name>~LutError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/exceptions.h" line="60" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This is the base class for the exceptions thrown by the <ref refid="classdicomhero_1_1_l_u_t" kindref="compound">LUT</ref> class. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>dicomhero::LutCorruptedError</label>
        <link refid="classdicomhero_1_1_lut_corrupted_error"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>dicomhero::LutError</label>
        <link refid="classdicomhero_1_1_lut_error"/>
      </node>
    </inheritancegraph>
    <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/exceptions.h" line="46" column="1" bodyfile="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/exceptions.h" bodystart="47" bodyend="61"/>
    <listofallmembers>
      <member refid="classdicomhero_1_1_lut_error_1a370ac400d9851964bd44d725d12b4d3a" prot="public" virt="non-virtual"><scope>dicomhero::LutError</scope><name>LutError</name></member>
      <member refid="classdicomhero_1_1_lut_error_1aab9e77db9b19b0cf8da2816bb8663d6f" prot="public" virt="non-virtual"><scope>dicomhero::LutError</scope><name>LutError</name></member>
      <member refid="classdicomhero_1_1_lut_error_1abecc6147acfdbf00e77494a3224e1c90" prot="public" virt="non-virtual"><scope>dicomhero::LutError</scope><name>operator=</name></member>
      <member refid="classdicomhero_1_1_lut_error_1a8a7e26e9b26ce8d548977fcb58822c90" prot="public" virt="virtual"><scope>dicomhero::LutError</scope><name>~LutError</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
