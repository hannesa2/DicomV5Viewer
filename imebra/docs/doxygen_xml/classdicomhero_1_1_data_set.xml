<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classdicomhero_1_1_data_set" kind="class" language="C++" prot="public">
    <compoundname>dicomhero::DataSet</compoundname>
    <includes local="no">dataSet.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classdicomhero_1_1_data_set_1ae7605469f7ad8eae64d956c2f16b29c4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class AssociationMessage</definition>
        <argsstring></argsstring>
        <name>AssociationMessage</name>
        <param>
          <type><ref refid="classdicomhero_1_1_association_message" kindref="compound">AssociationMessage</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="124" column="5" bodyfile="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classdicomhero_1_1_data_set_1a23c0ade62d1edf18d9097d5ffda4417f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class CodecFactory</definition>
        <argsstring></argsstring>
        <name>CodecFactory</name>
        <param>
          <type><ref refid="classdicomhero_1_1_codec_factory" kindref="compound">CodecFactory</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="125" column="5" bodyfile="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classdicomhero_1_1_data_set_1a435d1ec40c90f6b11ae3dfbd30114243" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class DicomDir</definition>
        <argsstring></argsstring>
        <name>DicomDir</name>
        <param>
          <type><ref refid="classdicomhero_1_1_dicom_dir" kindref="compound">DicomDir</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="126" column="5" bodyfile="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classdicomhero_1_1_data_set_1a500bbba8be6bd184454693ee101d47bc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class DicomDirEntry</definition>
        <argsstring></argsstring>
        <name>DicomDirEntry</name>
        <param>
          <type><ref refid="classdicomhero_1_1_dicom_dir_entry" kindref="compound">DicomDirEntry</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="127" column="5" bodyfile="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classdicomhero_1_1_data_set_1a720740d5350f252aee0beced2614daee" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class DimseCommandBase</definition>
        <argsstring></argsstring>
        <name>DimseCommandBase</name>
        <param>
          <type><ref refid="classdicomhero_1_1_dimse_command_base" kindref="compound">DimseCommandBase</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="128" column="5" bodyfile="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classdicomhero_1_1_data_set_1afc8c1b0e7f1fedf25715bd33b74eb56c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Tag</definition>
        <argsstring></argsstring>
        <name>Tag</name>
        <param>
          <type><ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="129" column="5" bodyfile="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classdicomhero_1_1_data_set_1a568d847a9f3e12f9a12e1f0189394c22" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::shared_ptr&lt; implementation::dataSet &gt; &amp;</type>
        <definition>const std::shared_ptr&lt;implementation::dataSet&gt;&amp; getDataSetImplementation</definition>
        <argsstring>(const DataSet &amp;dataSet)</argsstring>
        <name>getDataSetImplementation</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
          <declname>dataSet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1618" column="34"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdicomhero_1_1_data_set_1ae2cac21f2e28c47f70f372155b271aa7" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; dicomhero::implementation::dataSet &gt;</type>
        <definition>std::shared_ptr&lt;dicomhero::implementation::dataSet&gt; dicomhero::DataSet::m_pDataSet</definition>
        <argsstring></argsstring>
        <name>m_pDataSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1619" column="21" bodyfile="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" bodystart="1619" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1aac1eec7ccd910ba9cb756cf48847e2b5" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>dicomhero::DataSet::DataSet</definition>
        <argsstring>()</argsstring>
        <name>DataSet</name>
        <briefdescription>
<para>Construct an empty DICOM dataset with unspecified transfer syntax (which represents the default value &quot;1.2.840.10008.1.2&quot; or &quot;Implicit VR little endian&quot;) and default charset (&quot;ISO_IR 6&quot;). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="137" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a80cf97e8cce263ab7ff0f782b09ed3ee" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>dicomhero::DataSet::DataSet</definition>
        <argsstring>(const std::string &amp;transferSyntax)</argsstring>
        <name>DataSet</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>transferSyntax</declname>
        </param>
        <briefdescription>
<para>Construct an empty DICOM dataset with charset &quot;ISO_IR 6&quot; and the desidered transfer syntax. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transferSyntax</parametername>
</parameternamelist>
<parameterdescription>
<para>the dataSet&apos;s transfer syntax. The following transfer syntaxes are supported:<itemizedlist>
<listitem><para>&quot;1.2.840.10008.1.2&quot; (Implicit VR little endian)</para>
</listitem><listitem><para>&quot;1.2.840.10008.1.2.1&quot; (Explicit VR little endian)</para>
</listitem><listitem><para>&quot;1.2.840.10008.1.2.2&quot; (Explicit VR big endian)</para>
</listitem><listitem><para>&quot;1.2.840.10008.1.2.5&quot; (RLE compression)</para>
</listitem><listitem><para>&quot;1.2.840.10008.1.2.4.50&quot; (Jpeg baseline 8 bit lossy)</para>
</listitem><listitem><para>&quot;1.2.840.10008.1.2.4.51&quot; (Jpeg extended 12 bit lossy)</para>
</listitem><listitem><para>&quot;1.2.840.10008.1.2.4.57&quot; (Jpeg lossless NH)</para>
</listitem><listitem><para>&quot;1.2.840.10008.1.2.4.70&quot; (Jpeg lossless NH first order prediction) </para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="157" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a8986bb7996b1137ac5c473a102fe78de" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>dicomhero::DataSet::DataSet</definition>
        <argsstring>(const std::string &amp;transferSyntax, const charsetsList_t &amp;charsets)</argsstring>
        <name>DataSet</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>transferSyntax</declname>
        </param>
        <param>
          <type>const charsetsList_t &amp;</type>
          <declname>charsets</declname>
        </param>
        <briefdescription>
<para>Construct an empty DICOM dataset and specifies the default charsets. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transferSyntax</parametername>
</parameternamelist>
<parameterdescription>
<para>the dataSet&apos;s transfer syntax. The following transfer syntaxes are supported:<itemizedlist>
<listitem><para>&quot;1.2.840.10008.1.2&quot; (Implicit VR little endian)</para>
</listitem><listitem><para>&quot;1.2.840.10008.1.2.1&quot; (Explicit VR little endian)</para>
</listitem><listitem><para>&quot;1.2.840.10008.1.2.2&quot; (Explicit VR big endian)</para>
</listitem><listitem><para>&quot;1.2.840.10008.1.2.5&quot; (RLE compression)</para>
</listitem><listitem><para>&quot;1.2.840.10008.1.2.4.50&quot; (Jpeg baseline 8 bit lossy)</para>
</listitem><listitem><para>&quot;1.2.840.10008.1.2.4.51&quot; (Jpeg extended 12 bit lossy)</para>
</listitem><listitem><para>&quot;1.2.840.10008.1.2.4.57&quot; (Jpeg lossless NH)</para>
</listitem><listitem><para>&quot;1.2.840.10008.1.2.4.70&quot; (Jpeg lossless NH first order prediction)</para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>charsets</parametername>
</parameternamelist>
<parameterdescription>
<para>a list of charsets supported by the <ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="178" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a5dc9ad31ff2d9605abac2a228981af41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dicomhero::DataSet::DataSet</definition>
        <argsstring>(const DataSet &amp;source)</argsstring>
        <name>DataSet</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>the source data set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="186" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1ab0670f7da2e5c17f9408b9605144c6c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::operator=</definition>
        <argsstring>(const DataSet &amp;source)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="188" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1ac1a180180497e5d64931257cf1e6ba36" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual dicomhero::DataSet::~DataSet</definition>
        <argsstring>()</argsstring>
        <name>~DataSet</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="194" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a5b67081401077b403fc23bf9a8e38332" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>tagsIds_t</type>
        <definition>tagsIds_t dicomhero::DataSet::getTags</definition>
        <argsstring>() const</argsstring>
        <name>getTags</name>
        <briefdescription>
<para>Returns a list of all the tags stored in the <ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref>, ordered by group and tag ID. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>an ordered list of the stored Tags </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="202" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a0e992513efc3adb002be9bed1fa65207" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref></type>
        <definition>Tag dicomhero::DataSet::getTag</definition>
        <argsstring>(const TagId &amp;tagId) const</argsstring>
        <name>getTag</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <briefdescription>
<para>Retrieve the <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> with the specified ID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID of the tag to retrieve </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> with the specified ID</para>
</simplesect>
<simplesect kind="warning"><para>[REQ_CONST_COPY_DOCUMENTATION] the value returned by this method should not be modified and therefore should be assigned to a const qualified variable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="214" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a6b84f820d980b3f58fcf11981ccd9c13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_image" kindref="compound">Image</ref></type>
        <definition>Image dicomhero::DataSet::getImage</definition>
        <argsstring>(size_t frameNumber) const</argsstring>
        <name>getImage</name>
        <param>
          <type>size_t</type>
          <declname>frameNumber</declname>
        </param>
        <briefdescription>
<para>Retrieve an image from the dataset. </para>
        </briefdescription>
        <detaileddescription>
<para>Images should be retrieved in order (first frame 0, then frame 1, then frame 2 and so on). Images can be retrieved also in random order but this introduces performance penalties.</para>
<para>Throws <ref refid="classdicomhero_1_1_data_set_image_doesnt_exist_error" kindref="compound">DataSetImageDoesntExistError</ref> if the requested frame does not exist.</para>
<para><simplesect kind="note"><para>Images retrieved from the <ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> should be processed by the <ref refid="classdicomhero_1_1_modality_v_o_i_l_u_t" kindref="compound">ModalityVOILUT</ref> transform, which converts the modality-specific pixel values to values that the application can understand. Consider using <ref refid="classdicomhero_1_1_data_set_1a0457c4d709d0f149325c755a2c06dd0f" kindref="member">getImageApplyModalityTransform()</ref> to retrieve the image already processed by <ref refid="classdicomhero_1_1_modality_v_o_i_l_u_t" kindref="compound">ModalityVOILUT</ref>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frameNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the frame to retrieve (the first frame is 0) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an <ref refid="classdicomhero_1_1_image" kindref="compound">Image</ref> object containing the decompressed image</para>
</simplesect>
<simplesect kind="warning"><para>[REQ_CONST_COPY_DOCUMENTATION] the value returned by this method should not be modified and therefore should be assigned to a const qualified variable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="239" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a9b61ef5b5c31f44feb2bbddbe1ec8149" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_overlay" kindref="compound">Overlay</ref></type>
        <definition>Overlay dicomhero::DataSet::getOverlay</definition>
        <argsstring>(size_t overlayNumber) const</argsstring>
        <name>getOverlay</name>
        <param>
          <type>size_t</type>
          <declname>overlayNumber</declname>
        </param>
        <briefdescription>
<para>Retrieve one of the DICOM overlays. </para>
        </briefdescription>
        <detaileddescription>
<para>Throws <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref> if the requested overlay does not exist.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>overlayNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of the overlay to retrieve (0...127) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the requested overlay</para>
</simplesect>
<simplesect kind="warning"><para>[REQ_CONST_COPY_DOCUMENTATION] the value returned by this method should not be modified and therefore should be assigned to a const qualified variable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="253" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a0457c4d709d0f149325c755a2c06dd0f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_image" kindref="compound">Image</ref></type>
        <definition>Image dicomhero::DataSet::getImageApplyModalityTransform</definition>
        <argsstring>(size_t frameNumber) const</argsstring>
        <name>getImageApplyModalityTransform</name>
        <param>
          <type>size_t</type>
          <declname>frameNumber</declname>
        </param>
        <briefdescription>
<para>Retrieve an image from the dataset and if necessary process it with <ref refid="classdicomhero_1_1_modality_v_o_i_l_u_t" kindref="compound">ModalityVOILUT</ref> before returning it. </para>
        </briefdescription>
        <detaileddescription>
<para>Images should be retrieved in order (first frame 0, then frame 1, then frame 2 and so on). Images can be retrieved also in random order but this introduces performance penalties.</para>
<para>Throws <ref refid="classdicomhero_1_1_data_set_image_doesnt_exist_error" kindref="compound">DataSetImageDoesntExistError</ref> if the requested frame does not exist.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frameNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the frame to retrieve (the first frame is 0) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an image object containing the decompressed image processed with <ref refid="classdicomhero_1_1_modality_v_o_i_l_u_t" kindref="compound">ModalityVOILUT</ref></para>
</simplesect>
<simplesect kind="warning"><para>[REQ_CONST_COPY_DOCUMENTATION] the value returned by this method should not be modified and therefore should be assigned to a const qualified variable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="274" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a336d7fcf4b028b07135bca1d0f7f2962" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>vois_t</type>
        <definition>vois_t dicomhero::DataSet::getVOIs</definition>
        <argsstring>() const</argsstring>
        <name>getVOIs</name>
        <briefdescription>
<para>Return the list of VOI settings stored in the <ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Each VOI setting includes the center &amp; width values that can be used with the <ref refid="classdicomhero_1_1_v_o_i_l_u_t" kindref="compound">VOILUT</ref> transform to highlight different parts of an <ref refid="classdicomhero_1_1_image" kindref="compound">Image</ref>.</para>
<para>If the VOI/LUT information is stored in a functional group, then first use <ref refid="classdicomhero_1_1_data_set_1ad3a4f6e5a336f1bae983d56aba07e78d" kindref="member">getFunctionalGroupDataSet()</ref> to retrieve the sequence item containing the VOI/LUT information, then call <ref refid="classdicomhero_1_1_data_set_1a336d7fcf4b028b07135bca1d0f7f2962" kindref="member">getVOIs()</ref> on the returned dataset.</para>
<para><simplesect kind="return"><para>a list of <ref refid="classdicomhero_1_1_v_o_i_description" kindref="compound">VOIDescription</ref> objects defined in the <ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="288" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1ad3a4f6e5a336f1bae983d56aba07e78d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref></type>
        <definition>DataSet dicomhero::DataSet::getFunctionalGroupDataSet</definition>
        <argsstring>(size_t frameNumber) const</argsstring>
        <name>getFunctionalGroupDataSet</name>
        <param>
          <type>size_t</type>
          <declname>frameNumber</declname>
        </param>
        <briefdescription>
<para>In case the dataset uses functional groups to store imaging information, then this method returns the sequence item containing imaging information for a specific frame. </para>
        </briefdescription>
        <detaileddescription>
<para>The method looks first for a frame specific functional group sequence item, then for a common functional group sequence item if the specific one is missing.</para>
<para>Throws <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref> or <ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref> if the functional group sequence item is not present.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frameNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the frame number for which the functional group sequence item is required </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the functional group sequence item for the requested frame.</para>
</simplesect>
<simplesect kind="warning"><para>[REQ_CONST_COPY_DOCUMENTATION] the value returned by this method should not be modified and therefore should be assigned to a const qualified variable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="310" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1aa39572a2b90b7a4953aa4869b175aef2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_stream_reader" kindref="compound">StreamReader</ref></type>
        <definition>StreamReader dicomhero::DataSet::getStreamReader</definition>
        <argsstring>(const TagId &amp;tagId, size_t bufferId) const</argsstring>
        <name>getStreamReader</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufferId</declname>
        </param>
        <briefdescription>
<para>Get a <ref refid="classdicomhero_1_1_stream_reader" kindref="compound">StreamReader</ref> connected to a tag buffer&apos;s data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id for which the <ref refid="classdicomhero_1_1_stream_reader" kindref="compound">StreamReader</ref> is requested </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufferId</parametername>
</parameternamelist>
<parameterdescription>
<para>the id of the buffer for which the <ref refid="classdicomhero_1_1_stream_reader" kindref="compound">StreamReader</ref> is required. This parameter is usually 0 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the <ref refid="classdicomhero_1_1_stream_reader" kindref="compound">StreamReader</ref> connected to the buffer&apos;s data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="320" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a350cbb5cd19f67bc00e84648f0a02b7d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref></type>
        <definition>DataSet dicomhero::DataSet::getSequenceItem</definition>
        <argsstring>(const TagId &amp;tagId, size_t itemId) const</argsstring>
        <name>getSequenceItem</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>itemId</declname>
        </param>
        <briefdescription>
<para>Retrieve a sequence item stored in a tag. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then throws <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref>.</para>
<para>If the <ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> does not contain the specified sequence item then throws <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref>, <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id containing the sequence item </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>itemId</parametername>
</parameternamelist>
<parameterdescription>
<para>the sequence item to retrieve. The first item has an Id = 0 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the requested sequence item</para>
</simplesect>
<simplesect kind="warning"><para>[REQ_CONST_COPY_DOCUMENTATION] the value returned by this method should not be modified and therefore should be assigned to a const qualified variable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="339" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a882d093fb0ecd5fbc72f9911e602c3ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_l_u_t" kindref="compound">LUT</ref></type>
        <definition>LUT dicomhero::DataSet::getLUT</definition>
        <argsstring>(const TagId &amp;tagId, size_t itemId) const</argsstring>
        <name>getLUT</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>itemId</declname>
        </param>
        <briefdescription>
<para>Retrieve a <ref refid="classdicomhero_1_1_l_u_t" kindref="compound">LUT</ref> stored in a sequence item. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then throws <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref>.</para>
<para>If the <ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> does not contain the specified sequence item then throws <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref>, <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id containing the sequence that stores the LUTs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>itemId</parametername>
</parameternamelist>
<parameterdescription>
<para>the sequence item to retrieve. The first item has an Id = 0 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the <ref refid="classdicomhero_1_1_l_u_t" kindref="compound">LUT</ref> stored in the requested sequence item</para>
</simplesect>
<simplesect kind="warning"><para>[REQ_CONST_COPY_DOCUMENTATION] the value returned by this method should not be modified and therefore should be assigned to a const qualified variable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="358" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1afbf1d647fd892740fb171d42470934d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_reading_data_handler" kindref="compound">ReadingDataHandler</ref></type>
        <definition>ReadingDataHandler dicomhero::DataSet::getReadingDataHandler</definition>
        <argsstring>(const TagId &amp;tagId, size_t bufferId) const</argsstring>
        <name>getReadingDataHandler</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufferId</declname>
        </param>
        <briefdescription>
<para>Retrieve a <ref refid="classdicomhero_1_1_reading_data_handler" kindref="compound">ReadingDataHandler</ref> object connected to a specific tag&apos;s buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then throws <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref>.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not contain the specified buffer item then throws <ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id containing the requested buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufferId</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer to connect to the <ref refid="classdicomhero_1_1_reading_data_handler" kindref="compound">ReadingDataHandler</ref> object. The first buffer has an Id = 0 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="classdicomhero_1_1_reading_data_handler" kindref="compound">ReadingDataHandler</ref> object connected to the requested <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="375" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1ac816e83237820c7a5860374fe716f086" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_reading_data_handler_numeric" kindref="compound">ReadingDataHandlerNumeric</ref></type>
        <definition>ReadingDataHandlerNumeric dicomhero::DataSet::getReadingDataHandlerNumeric</definition>
        <argsstring>(const TagId &amp;tagId, size_t bufferId) const</argsstring>
        <name>getReadingDataHandlerNumeric</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufferId</declname>
        </param>
        <briefdescription>
<para>Retrieve a getReadingDataHandlerNumeric object connected to a specific tag&apos;s numeric buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s VR is not a numeric type then throws std::bad_cast.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then throws <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref>.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not contain the specified buffer item then throws <ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id containing the requested buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufferId</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer to connect to the <ref refid="classdicomhero_1_1_reading_data_handler" kindref="compound">ReadingDataHandler</ref> object. The first buffer has an Id = 0 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="classdicomhero_1_1_reading_data_handler_numeric" kindref="compound">ReadingDataHandlerNumeric</ref> object connected to the requested <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="395" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a7fd6365b07ed5ec23e3bc1dcf9331f03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_reading_data_handler_numeric" kindref="compound">ReadingDataHandlerNumeric</ref></type>
        <definition>ReadingDataHandlerNumeric dicomhero::DataSet::getReadingDataHandlerRaw</definition>
        <argsstring>(const TagId &amp;tagId, size_t bufferId) const</argsstring>
        <name>getReadingDataHandlerRaw</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufferId</declname>
        </param>
        <briefdescription>
<para>Retrieve a getReadingDataHandlerNumeric object connected to a specific tag&apos;s buffer, no matter what the tag&apos;s data type. </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s VR is not a numeric type then throws std::bad_cast.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then throws <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref>.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not contain the specified buffer item then throws <ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id containing the requested buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufferId</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer to connect to the <ref refid="classdicomhero_1_1_reading_data_handler" kindref="compound">ReadingDataHandler</ref> object. The first buffer has an Id = 0 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="classdicomhero_1_1_reading_data_handler_numeric" kindref="compound">ReadingDataHandlerNumeric</ref> object connected to the requested <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="415" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a173aebb77c7b11aa7b445ff75018505c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dicomhero::DataSet::bufferExists</definition>
        <argsstring>(const TagId &amp;tagId, size_t bufferId) const</argsstring>
        <name>bufferExists</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufferId</declname>
        </param>
        <briefdescription>
<para>Check if the specified tag and tag&apos;s buffer exist. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the specified tag and tag&apos;s buffer exist, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="422" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a828ca1f5edb1b61ac155aa923141b0df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::int64_t</type>
        <definition>std::int64_t dicomhero::DataSet::getInt64</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber) const</argsstring>
        <name>getInt64</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as signed long integer (64 bit). </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to a signed integer then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the value does not exist then throws <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref> or <ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref> or <ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as a signed 32 bit integer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="437" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a14310facc365e56f58b495860f7d8d14" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t dicomhero::DataSet::getInt32</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber) const</argsstring>
        <name>getInt32</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as signed integer (32 bit). </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to a signed integer then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the value does not exist then throws <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref> or <ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref> or <ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as a signed 32 bit integer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="452" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1ad10c9d675ec46a8d2db1d4df25ce173d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t dicomhero::DataSet::getSignedLong</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber) const</argsstring>
        <name>getSignedLong</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <briefdescription>
<para>Deprecated. Use <ref refid="classdicomhero_1_1_data_set_1a14310facc365e56f58b495860f7d8d14" kindref="member">getInt32()</ref> instead. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="457" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a6520ea07f3ac247517028ddf8d21a1a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::int64_t</type>
        <definition>std::int64_t dicomhero::DataSet::getInt64</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber, std::int64_t defaultValue) const</argsstring>
        <name>getInt64</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as signed long integer (64 bit). </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to a signed integer then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist or it does not contain the specified buffer then returns the default value specified in the parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to return if the tag doesn&apos;t exist </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as a signed 32 bit integer, or defaultValue if the tag doesn&apos;t exist </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="474" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1acae1822ce7e3095d538274fe29822a4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t dicomhero::DataSet::getInt32</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber, std::int32_t defaultValue) const</argsstring>
        <name>getInt32</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <param>
          <type>std::int32_t</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as signed integer (32 bit). </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to a signed integer then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist or it does not contain the specified buffer then returns the default value specified in the parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to return if the tag doesn&apos;t exist </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as a signed 32 bit integer, or defaultValue if the tag doesn&apos;t exist </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="491" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a56c378b03712a2b23583d9790dcafb62" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t dicomhero::DataSet::getSignedLong</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber, std::int32_t defaultValue) const</argsstring>
        <name>getSignedLong</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <param>
          <type>std::int32_t</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Deprecated. Use <ref refid="classdicomhero_1_1_data_set_1a14310facc365e56f58b495860f7d8d14" kindref="member">getInt32()</ref> instead. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="496" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a94f0f4c9d121f9ffb5cf0674bbc3e63f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::uint64_t</type>
        <definition>std::uint64_t dicomhero::DataSet::getUint64</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber) const</argsstring>
        <name>getUint64</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as unsigned long integer (64 bit). </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to an unsigned integer then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the value does not exist then throws <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref> or <ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref> or <ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as an unsigned 32 bit integer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="511" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a1aeaeaaf83f92dba4738922a40b56369" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::uint32_t</type>
        <definition>std::uint32_t dicomhero::DataSet::getUint32</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber) const</argsstring>
        <name>getUint32</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as unsigned integer (32 bit). </para>
        </briefdescription>
        <detaileddescription>
<para>When calling <ref refid="classdicomhero_1_1_data_set_1a1aeaeaaf83f92dba4738922a40b56369" kindref="member">getUint32()</ref> on an AT tag (Attribute <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>) then the tag group is always in the high word of the returned value.</para>
<para>If the tag&apos;s value cannot be converted to an unsigned integer then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the value does not exist then throws <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref> or <ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref> or <ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as an unsigned 32 bit integer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="529" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a2c943f175f8c19995e8be533b6e50f0c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::uint32_t</type>
        <definition>std::uint32_t dicomhero::DataSet::getUnsignedLong</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber) const</argsstring>
        <name>getUnsignedLong</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <briefdescription>
<para>Deprecated. Use <ref refid="classdicomhero_1_1_data_set_1a1aeaeaaf83f92dba4738922a40b56369" kindref="member">getUint32()</ref> instead. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="534" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a7c25eb6b7cb9300e1ac20ea55ad5f0b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::uint64_t</type>
        <definition>std::uint64_t dicomhero::DataSet::getUint64</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber, std::uint64_t defaultValue) const</argsstring>
        <name>getUint64</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <param>
          <type>std::uint64_t</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as unsigned long integer (64 bit). </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to an unsigned integer then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then returns the default value specified in the parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to return if the tag doesn&apos;t exist </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as an unsigned 32 bit integer, or defaultValue if the tag doesn&apos;t exist </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="551" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a7f6bbb616db146695051232f15093ac5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::uint32_t</type>
        <definition>std::uint32_t dicomhero::DataSet::getUint32</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber, std::uint32_t defaultValue) const</argsstring>
        <name>getUint32</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <param>
          <type>std::uint32_t</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as unsigned integer (32 bit). </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to an unsigned integer then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then returns the default value specified in the parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to return if the tag doesn&apos;t exist </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as an unsigned 32 bit integer, or defaultValue if the tag doesn&apos;t exist </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="568" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a50cf389be1e746632511f6b4b76fe0a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::uint32_t</type>
        <definition>std::uint32_t dicomhero::DataSet::getUnsignedLong</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber, std::uint32_t defaultValue) const</argsstring>
        <name>getUnsignedLong</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <param>
          <type>std::uint32_t</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Deprecated. Use <ref refid="classdicomhero_1_1_data_set_1a1aeaeaaf83f92dba4738922a40b56369" kindref="member">getUint32()</ref> instead. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="573" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a46fad6e5282d5b178ab62f1fd18aa0d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::int16_t</type>
        <definition>std::int16_t dicomhero::DataSet::getInt16</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber) const</argsstring>
        <name>getInt16</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as signed integer (16 bit). </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to a signed integer then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the value does not exist then throws <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref> or <ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref> or <ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as a signed 16 bit integer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="588" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a8d3784eac4639eb77ee21eeaa755f7f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::int16_t</type>
        <definition>std::int16_t dicomhero::DataSet::getInt16</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber, std::int16_t defaultValue) const</argsstring>
        <name>getInt16</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <param>
          <type>std::int16_t</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as signed integer (16 bit). </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to a signed long integer then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist or it does not contain the specified buffer then returns the default value specified in the parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to return if the tag doesn&apos;t exist </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as a signed 16 bit integer, or defaultValue if the tag doesn&apos;t exist </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="605" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a01aa692d1da5d88f5166e26f88dc396d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::uint16_t</type>
        <definition>std::uint16_t dicomhero::DataSet::getUint16</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber) const</argsstring>
        <name>getUint16</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as unsigned integer (16 bit). </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to an unsigned integer then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the value does not exist then throws <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref> or <ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref> or <ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as an unsigned 16 bit integer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="620" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1aed920876636644cddf2c3fd65ca9bf53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::uint16_t</type>
        <definition>std::uint16_t dicomhero::DataSet::getUint16</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber, std::uint16_t defaultValue) const</argsstring>
        <name>getUint16</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <param>
          <type>std::uint16_t</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as unsigned integer (16 bit). </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to an unsigned integer then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then returns the default value specified in the parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to return if the tag doesn&apos;t exist </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as an unsigned 16 bit integer, or defaultValue if the tag doesn&apos;t exist </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="637" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a2102225f15e99f0767b0837b0050ebc1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::int8_t</type>
        <definition>std::int8_t dicomhero::DataSet::getInt8</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber) const</argsstring>
        <name>getInt8</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as signed integer (8 bit). </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to a signed integer then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the value does not exist then throws <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref> or <ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref> or <ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as a signed 8 bit integer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="652" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a038b6ce8630f540be37fb66927a1e08c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::int8_t</type>
        <definition>std::int8_t dicomhero::DataSet::getInt8</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber, std::int8_t defaultValue) const</argsstring>
        <name>getInt8</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <param>
          <type>std::int8_t</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as signed integer (8 bit). </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to a signed long integer then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist or it does not contain the specified buffer then returns the default value specified in the parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to return if the tag doesn&apos;t exist </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as a signed 8 bit integer, or defaultValue if the tag doesn&apos;t exist </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="669" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a56482ea1b288e62854463574bbeca3cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::uint8_t</type>
        <definition>std::uint8_t dicomhero::DataSet::getUint8</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber) const</argsstring>
        <name>getUint8</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as unsigned integer (8 bit). </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to an unsigned integer then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the value does not exist then throws <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref> or <ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref> or <ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as an unsigned 8 bit integer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="684" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1ae232914b3d5cb6f0814414122de4d050" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::uint8_t</type>
        <definition>std::uint8_t dicomhero::DataSet::getUint8</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber, std::uint8_t defaultValue) const</argsstring>
        <name>getUint8</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <param>
          <type>std::uint8_t</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as unsigned integer (8 bit). </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to an unsigned integer then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then returns the default value specified in the parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to return if the tag doesn&apos;t exist </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as an unsigned 8 bit integer, or defaultValue if the tag doesn&apos;t exist </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="701" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a1b61754d1c20b5568db14c02335d0325" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double dicomhero::DataSet::getDouble</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber) const</argsstring>
        <name>getDouble</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as a 64 bit floating point. </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to a floating point value then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the value does not exist then throws <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref> or <ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref> or <ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as a 64 bit floating point </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="716" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1ac3bbaa58ed791f4e3b337ec43638e4fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float dicomhero::DataSet::getFloat</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber) const</argsstring>
        <name>getFloat</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as a 32 bit floating point. </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to a floating point value then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the value does not exist then throws <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref> or <ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref> or <ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as a 32 bit floating point </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="731" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a74ab9f6a25579494ca323c300ec3799a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double dicomhero::DataSet::getDouble</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber, double defaultValue) const</argsstring>
        <name>getDouble</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <param>
          <type>double</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as a 64 bit floating point. </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to a floating point value then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then returns the default value specified in the parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to return if the tag doesn&apos;t exist </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as a 64 bit floating point, or defaultValue if the tag doesn&apos;t exist </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="748" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a67843ba6811544bfb3e62fd34f3ac2d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float dicomhero::DataSet::getFloat</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber, float defaultValue) const</argsstring>
        <name>getFloat</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <param>
          <type>float</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as a 32 bit floating point. </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to a floating point value then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then returns the default value specified in the parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to return if the tag doesn&apos;t exist </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as a 32 bit floating point, or defaultValue if the tag doesn&apos;t exist </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="765" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a7409e28982bd6923736166529903446e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dicomhero::DataSet::getString</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber) const</argsstring>
        <name>getString</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as a UTF8 string. </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to a string then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the value does not exist then throws <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref> or <ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref> or <ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>.</para>
<para>If the conversion to UTF8 fails then throws <ref refid="classdicomhero_1_1_charset_conversion_cannot_convert" kindref="compound">CharsetConversionCannotConvert</ref>, <ref refid="classdicomhero_1_1_charset_conversion_no_supported_table_error" kindref="compound">CharsetConversionNoSupportedTableError</ref>, <ref refid="classdicomhero_1_1_charset_conversion_no_table_error" kindref="compound">CharsetConversionNoTableError</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as a string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="784" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a1c8f8b7df3831675436dcc271b9a366e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dicomhero::DataSet::getString</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber, const std::string &amp;defaultValue) const</argsstring>
        <name>getString</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as a UTF8 string. </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to a string then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then returns the default value specified in the parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to return if the tag doesn&apos;t exist </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as a string, or defaultValue if the tag doesn&apos;t exist </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="801" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1ab82131b0d5a7ede668a28545d50a73f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::wstring</type>
        <definition>std::wstring dicomhero::DataSet::getUnicodeString</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber) const</argsstring>
        <name>getUnicodeString</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as an Unicode string. </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to a Unicode string then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the value does not exist then throws <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref> or <ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref> or <ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as an unicode string</para>
</simplesect>
<simplesect kind="warning"><para>[REQ_CONST_COPY_DOCUMENTATION] the value returned by this method should not be modified and therefore should be assigned to a const qualified variable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="821" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a603836875dbd32d9ce5d3d62df8f36ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::wstring</type>
        <definition>std::wstring dicomhero::DataSet::getUnicodeString</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber, const std::wstring &amp;defaultValue) const</argsstring>
        <name>getUnicodeString</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <param>
          <type>const std::wstring &amp;</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as an unicode string. </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to a Unicode string then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then returns the default value specified in the parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to return if the tag doesn&apos;t exist </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as an unicode string, or defaultValue if the tag doesn&apos;t exist</para>
</simplesect>
<simplesect kind="warning"><para>[REQ_CONST_COPY_DOCUMENTATION] the value returned by this method should not be modified and therefore should be assigned to a const qualified variable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="842" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1abca48a77c5627bed350ce216a3d6677f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_age" kindref="compound">Age</ref></type>
        <definition>Age dicomhero::DataSet::getAge</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber) const</argsstring>
        <name>getAge</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as <ref refid="classdicomhero_1_1_age" kindref="compound">Age</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to <ref refid="classdicomhero_1_1_age" kindref="compound">Age</ref> then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the value does not exist then throws <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref> or <ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref> or <ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as <ref refid="classdicomhero_1_1_age" kindref="compound">Age</ref></para>
</simplesect>
<simplesect kind="warning"><para>[REQ_CONST_COPY_DOCUMENTATION] the value returned by this method should not be modified and therefore should be assigned to a const qualified variable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="862" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1aabbe47a259533f83c05bd755494954c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_age" kindref="compound">Age</ref></type>
        <definition>Age dicomhero::DataSet::getAge</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber, const Age &amp;defaultValue) const</argsstring>
        <name>getAge</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <param>
          <type>const <ref refid="classdicomhero_1_1_age" kindref="compound">Age</ref> &amp;</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as <ref refid="classdicomhero_1_1_age" kindref="compound">Age</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to <ref refid="classdicomhero_1_1_age" kindref="compound">Age</ref> then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then returns the default value specified in the parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer 0 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to return if the tag doesn&apos;t exist </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as <ref refid="classdicomhero_1_1_age" kindref="compound">Age</ref>, or defaultValue if the tag doesn&apos;t exist</para>
</simplesect>
<simplesect kind="warning"><para>[REQ_CONST_COPY_DOCUMENTATION] the value returned by this method should not be modified and therefore should be assigned to a const qualified variable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="882" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1ac9c0a6ab9927b64a5f3c8e3b24af5b36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date dicomhero::DataSet::getDate</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber) const</argsstring>
        <name>getDate</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as a <ref refid="classdicomhero_1_1_date" kindref="compound">Date</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to a <ref refid="classdicomhero_1_1_date" kindref="compound">Date</ref> then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the value does not exist then throws <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref> or <ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref> or <ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer 0 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as a <ref refid="classdicomhero_1_1_date" kindref="compound">Date</ref></para>
</simplesect>
<simplesect kind="warning"><para>[REQ_CONST_COPY_DOCUMENTATION] the value returned by this method should not be modified and therefore should be assigned to a const qualified variable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="901" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a7ccd6c0a25ad9693525132f2145145a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date dicomhero::DataSet::getDate</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber, const Date &amp;defaultValue) const</argsstring>
        <name>getDate</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <param>
          <type>const <ref refid="classdicomhero_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as a <ref refid="classdicomhero_1_1_date" kindref="compound">Date</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to a date then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then returns the default value specified in the parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to return if the tag doesn&apos;t exist </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as a <ref refid="classdicomhero_1_1_date" kindref="compound">Date</ref>, or defaultValue if the tag doesn&apos;t exist</para>
</simplesect>
<simplesect kind="warning"><para>[REQ_CONST_COPY_DOCUMENTATION] the value returned by this method should not be modified and therefore should be assigned to a const qualified variable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="921" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a315a077a6efb058a34ab0939a0041255" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_patient_name" kindref="compound">PatientName</ref></type>
        <definition>PatientName dicomhero::DataSet::getPatientName</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber) const</argsstring>
        <name>getPatientName</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as a Patient Name. </para>
        </briefdescription>
        <detaileddescription>
<para>If the value does not exist then throws <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref> or <ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref> or <ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to return if the tag doesn&apos;t exist </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as a Patient Name</para>
</simplesect>
<simplesect kind="warning"><para>[REQ_CONST_COPY_DOCUMENTATION] the value returned by this method should not be modified and therefore should be assigned to a const qualified variable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="938" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a2c028e2b8151a9d05a3431d0dee1e12a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_patient_name" kindref="compound">PatientName</ref></type>
        <definition>PatientName dicomhero::DataSet::getPatientName</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber, const PatientName &amp;defaultValue) const</argsstring>
        <name>getPatientName</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <param>
          <type>const <ref refid="classdicomhero_1_1_patient_name" kindref="compound">PatientName</ref> &amp;</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as a Patient Name. </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to a patient name then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then returns the default value specified in the parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to return if the tag doesn&apos;t exist </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as a Patient Name, or defaultValue if the tag doesn&apos;t exist</para>
</simplesect>
<simplesect kind="warning"><para>[REQ_CONST_COPY_DOCUMENTATION] the value returned by this method should not be modified and therefore should be assigned to a const qualified variable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="959" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1ae2b20bfd60d59ae3d9ec64b4b42721bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_unicode_patient_name" kindref="compound">UnicodePatientName</ref></type>
        <definition>UnicodePatientName dicomhero::DataSet::getUnicodePatientName</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber) const</argsstring>
        <name>getUnicodePatientName</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as a Unicode Patient Name. </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to a patient name then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the value does not exist then throws <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref> or <ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref> or <ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to return if the tag doesn&apos;t exist </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as a Unicode Patient Name</para>
</simplesect>
<simplesect kind="warning"><para>[REQ_CONST_COPY_DOCUMENTATION] the value returned by this method should not be modified and therefore should be assigned to a const qualified variable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="980" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a0455a23e3c1bad12f3d23193f3cacf0f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_unicode_patient_name" kindref="compound">UnicodePatientName</ref></type>
        <definition>UnicodePatientName dicomhero::DataSet::getUnicodePatientName</definition>
        <argsstring>(const TagId &amp;tagId, size_t elementNumber, const UnicodePatientName &amp;defaultValue) const</argsstring>
        <name>getUnicodePatientName</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elementNumber</declname>
        </param>
        <param>
          <type>const <ref refid="classdicomhero_1_1_unicode_patient_name" kindref="compound">UnicodePatientName</ref> &amp;</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
<para>Retrieve a tag&apos;s value as a Unicode Patient Name. </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s value cannot be converted to a patient name then throws <ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then returns the default value specified in the parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elementNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the element number within the buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to return if the tag doesn&apos;t exist </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s value as a Unicode Patient Name, or defaultValue if the tag doesn&apos;t exist</para>
</simplesect>
<simplesect kind="warning"><para>[REQ_CONST_COPY_DOCUMENTATION] the value returned by this method should not be modified and therefore should be assigned to a const qualified variable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1001" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a858c319e2df6600b39584d9401abea3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref></type>
        <definition>Tag dicomhero::DataSet::getTagCreate</definition>
        <argsstring>(const TagId &amp;tagId, tagVR_t tagVR)</argsstring>
        <name>getTagCreate</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a68ed174f363e2d8f54f8e122040d03d1" kindref="member">tagVR_t</ref></type>
          <declname>tagVR</declname>
        </param>
        <briefdescription>
<para>Retrieve the <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> with the specified ID or create it if it doesn&apos;t exist. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID of the tag to retrieve </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tagVR</parametername>
</parameternamelist>
<parameterdescription>
<para>the VR to use for the new tag if one doesn&apos;t exist already </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> with the specified ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1013" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1ab9da739bfb7614cdb44b0e39690c9f67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref></type>
        <definition>Tag dicomhero::DataSet::getTagCreate</definition>
        <argsstring>(const TagId &amp;tagId)</argsstring>
        <name>getTagCreate</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <briefdescription>
<para>Retrieve the <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> with the specified ID or create it if it doesn&apos;t exist. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID of the tag to retrieve </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> with the specified ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1022" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1acbc4fd2b0d6786392e5ac43567870b13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setImage</definition>
        <argsstring>(size_t frameNumber, const Image &amp;image, imageQuality_t quality)</argsstring>
        <name>setImage</name>
        <param>
          <type>size_t</type>
          <declname>frameNumber</declname>
        </param>
        <param>
          <type>const <ref refid="classdicomhero_1_1_image" kindref="compound">Image</ref> &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a6929171a4348c7e8b65e02ff7369274a" kindref="member">imageQuality_t</ref></type>
          <declname>quality</declname>
        </param>
        <briefdescription>
<para>Insert an image into the dataset. </para>
        </briefdescription>
        <detaileddescription>
<para>In multi-frame datasets the images must be inserted in order: first, insert the frame 0, then the frame 1, then the frame 2 and so on.</para>
<para>All the inserted images must have the same transfer syntax and the same properties (size, color space, high bit, bits allocated).</para>
<para>If the images are inserted in the wrong order then the <ref refid="classdicomhero_1_1_data_set_wrong_frame_error" kindref="compound">DataSetWrongFrameError</ref> exception is thrown.</para>
<para>If the image being inserted has different properties than the ones of the images already in the dataset then the exception <ref refid="classdicomhero_1_1_data_set_different_format_error" kindref="compound">DataSetDifferentFormatError</ref> is thrown.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frameNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the frame number (the first frame is 0) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>the image </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quality</parametername>
</parameternamelist>
<parameterdescription>
<para>the quality to use for lossy compression. Ignored if lossless compression is used </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1045" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1af73b74cf3457f19887b90bd9da775f84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setOverlay</definition>
        <argsstring>(size_t overlayNumber, const Overlay &amp;overlay)</argsstring>
        <name>setOverlay</name>
        <param>
          <type>size_t</type>
          <declname>overlayNumber</declname>
        </param>
        <param>
          <type>const <ref refid="classdicomhero_1_1_overlay" kindref="compound">Overlay</ref> &amp;</type>
          <declname>overlay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1047" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1ae1e426a4eff9aa609558e06e7fa9e462" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_stream_writer" kindref="compound">StreamWriter</ref></type>
        <definition>StreamWriter dicomhero::DataSet::getStreamWriter</definition>
        <argsstring>(const TagId &amp;tagId, size_t bufferId, tagVR_t tagVR)</argsstring>
        <name>getStreamWriter</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufferId</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a68ed174f363e2d8f54f8e122040d03d1" kindref="member">tagVR_t</ref></type>
          <declname>tagVR</declname>
        </param>
        <briefdescription>
<para>Get a <ref refid="classdicomhero_1_1_stream_writer" kindref="compound">StreamWriter</ref> connected to a tag buffer&apos;s data. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then it creates a new tag with the VR specified in the tagVR parameter</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id for which the <ref refid="classdicomhero_1_1_stream_writer" kindref="compound">StreamWriter</ref> is required </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufferId</parametername>
</parameternamelist>
<parameterdescription>
<para>the id of the buffer for which the <ref refid="classdicomhero_1_1_stream_writer" kindref="compound">StreamWriter</ref> is required. This parameter is usually 0 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tagVR</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s VR </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the <ref refid="classdicomhero_1_1_stream_writer" kindref="compound">StreamWriter</ref> connected to the buffer&apos;s data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1061" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1acf6b4b04a548b29c4d429ae6d084423b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_stream_writer" kindref="compound">StreamWriter</ref></type>
        <definition>StreamWriter dicomhero::DataSet::getStreamWriter</definition>
        <argsstring>(const TagId &amp;tagId, size_t bufferId)</argsstring>
        <name>getStreamWriter</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufferId</declname>
        </param>
        <briefdescription>
<para>Get a <ref refid="classdicomhero_1_1_stream_writer" kindref="compound">StreamWriter</ref> connected to a tag buffer&apos;s data. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then it creates a new tag with a default VR retrieved from the <ref refid="classdicomhero_1_1_dicom_dictionary" kindref="compound">DicomDictionary</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id for which the <ref refid="classdicomhero_1_1_stream_writer" kindref="compound">StreamWriter</ref> is required </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufferId</parametername>
</parameternamelist>
<parameterdescription>
<para>the id of the buffer for which the <ref refid="classdicomhero_1_1_stream_writer" kindref="compound">StreamWriter</ref> is required. This parameter is usually 0 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the <ref refid="classdicomhero_1_1_stream_writer" kindref="compound">StreamWriter</ref> connected to the buffer&apos;s data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1074" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a631855d271891e54a6b64488d7036d82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref></type>
        <definition>DataSet dicomhero::DataSet::appendSequenceItem</definition>
        <argsstring>(const TagId &amp;tagId)</argsstring>
        <name>appendSequenceItem</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <briefdescription>
<para>Append a sequence item. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then creates a new one with VR <ref refid="definitions_8h_1a68ed174f363e2d8f54f8e122040d03d1a1249ab51832d31d2c1a0ac36b9ffaa2d" kindref="member">tagVR_t::SQ</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id in which the sequence must be stored </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the <ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> representing the added sequence item </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1085" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a924ce70603998676d3cad779ec135c76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_writing_data_handler" kindref="compound">WritingDataHandler</ref></type>
        <definition>WritingDataHandler dicomhero::DataSet::getWritingDataHandler</definition>
        <argsstring>(const TagId &amp;tagId, size_t bufferId, tagVR_t tagVR)</argsstring>
        <name>getWritingDataHandler</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufferId</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a68ed174f363e2d8f54f8e122040d03d1" kindref="member">tagVR_t</ref></type>
          <declname>tagVR</declname>
        </param>
        <briefdescription>
<para>Retrieve a <ref refid="classdicomhero_1_1_writing_data_handler" kindref="compound">WritingDataHandler</ref> object connected to a specific tag&apos;s buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then it creates a new tag with the VR specified in the tagVR parameter</para>
<para>The returned <ref refid="classdicomhero_1_1_writing_data_handler" kindref="compound">WritingDataHandler</ref> is connected to a new buffer which is updated and stored into the tag when <ref refid="classdicomhero_1_1_writing_data_handler" kindref="compound">WritingDataHandler</ref> is destroyed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id containing the requested buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufferId</parametername>
</parameternamelist>
<parameterdescription>
<para>the position where the new buffer has to be stored in the tag. The first buffer position is 0 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tagVR</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s VR </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="classdicomhero_1_1_writing_data_handler" kindref="compound">WritingDataHandler</ref> object connected to a new <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1103" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a96f17907ae8a892530d93562da470672" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_writing_data_handler" kindref="compound">WritingDataHandler</ref></type>
        <definition>WritingDataHandler dicomhero::DataSet::getWritingDataHandler</definition>
        <argsstring>(const TagId &amp;tagId, size_t bufferId)</argsstring>
        <name>getWritingDataHandler</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufferId</declname>
        </param>
        <briefdescription>
<para>Retrieve a <ref refid="classdicomhero_1_1_writing_data_handler" kindref="compound">WritingDataHandler</ref> object connected to a specific tag&apos;s buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then it creates a new tag with a default VR retrieved from the <ref refid="classdicomhero_1_1_dicom_dictionary" kindref="compound">DicomDictionary</ref>.</para>
<para>The returned <ref refid="classdicomhero_1_1_writing_data_handler" kindref="compound">WritingDataHandler</ref> is connected to a new buffer which is updated and stored into the tag when <ref refid="classdicomhero_1_1_writing_data_handler" kindref="compound">WritingDataHandler</ref> is destroyed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id containing the requested buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufferId</parametername>
</parameternamelist>
<parameterdescription>
<para>the position where the new buffer has to be stored in the tag. The first buffer position is 0 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="classdicomhero_1_1_writing_data_handler" kindref="compound">WritingDataHandler</ref> object connected to a new <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1120" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a9f6185976074f5bbde298e2a0119386f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_writing_data_handler_numeric" kindref="compound">WritingDataHandlerNumeric</ref></type>
        <definition>WritingDataHandlerNumeric dicomhero::DataSet::getWritingDataHandlerNumeric</definition>
        <argsstring>(const TagId &amp;tagId, size_t bufferId, tagVR_t tagVR)</argsstring>
        <name>getWritingDataHandlerNumeric</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufferId</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a68ed174f363e2d8f54f8e122040d03d1" kindref="member">tagVR_t</ref></type>
          <declname>tagVR</declname>
        </param>
        <briefdescription>
<para>Retrieve a <ref refid="classdicomhero_1_1_writing_data_handler_numeric" kindref="compound">WritingDataHandlerNumeric</ref> object connected to a specific tag&apos;s buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s VR is not a numeric type then throws std::bad_cast.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then it creates a new tag with the VR specified in the tagVR parameter</para>
<para>The returned <ref refid="classdicomhero_1_1_writing_data_handler_numeric" kindref="compound">WritingDataHandlerNumeric</ref> is connected to a new buffer which is updated and stored into the tag when <ref refid="classdicomhero_1_1_writing_data_handler_numeric" kindref="compound">WritingDataHandlerNumeric</ref> is destroyed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id containing the requested buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufferId</parametername>
</parameternamelist>
<parameterdescription>
<para>the position where the new buffer has to be stored in the tag. The first buffer position is 0 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tagVR</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s VR </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="classdicomhero_1_1_writing_data_handler_numeric" kindref="compound">WritingDataHandlerNumeric</ref> object connected to a new <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1141" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a7b48cd65dad2f0c3d0d992d2a5e48baa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_writing_data_handler_numeric" kindref="compound">WritingDataHandlerNumeric</ref></type>
        <definition>WritingDataHandlerNumeric dicomhero::DataSet::getWritingDataHandlerNumeric</definition>
        <argsstring>(const TagId &amp;tagId, size_t bufferId)</argsstring>
        <name>getWritingDataHandlerNumeric</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufferId</declname>
        </param>
        <briefdescription>
<para>Retrieve a <ref refid="classdicomhero_1_1_writing_data_handler_numeric" kindref="compound">WritingDataHandlerNumeric</ref> object connected to a specific tag&apos;s buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s VR is not a numeric type then throws std::bad_cast.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then it creates a new tag with a default VR retrieved from the <ref refid="classdicomhero_1_1_dicom_dictionary" kindref="compound">DicomDictionary</ref>.</para>
<para>The returned <ref refid="classdicomhero_1_1_writing_data_handler_numeric" kindref="compound">WritingDataHandlerNumeric</ref> is connected to a new buffer which is updated and stored into the tag when <ref refid="classdicomhero_1_1_writing_data_handler_numeric" kindref="compound">WritingDataHandlerNumeric</ref> is destroyed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id containing the requested buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufferId</parametername>
</parameternamelist>
<parameterdescription>
<para>the position where the new buffer has to be stored in the tag. The first buffer position is 0 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="classdicomhero_1_1_writing_data_handler_numeric" kindref="compound">WritingDataHandlerNumeric</ref> object connected to a new <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1161" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a39b6c34baff5d65e2d6b09c8cda00071" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_writing_data_handler_numeric" kindref="compound">WritingDataHandlerNumeric</ref></type>
        <definition>WritingDataHandlerNumeric dicomhero::DataSet::getWritingDataHandlerRaw</definition>
        <argsstring>(const TagId &amp;tagId, size_t bufferId, tagVR_t tagVR)</argsstring>
        <name>getWritingDataHandlerRaw</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufferId</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a68ed174f363e2d8f54f8e122040d03d1" kindref="member">tagVR_t</ref></type>
          <declname>tagVR</declname>
        </param>
        <briefdescription>
<para>Retrieve a <ref refid="classdicomhero_1_1_writing_data_handler_numeric" kindref="compound">WritingDataHandlerNumeric</ref> object connected to a specific tag&apos;s buffer. The handler content is cast to bytes. </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s VR is not a numeric type then throws std::bad_cast.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then it creates a new tag with the VR specified in the tagVR parameter</para>
<para>The returned <ref refid="classdicomhero_1_1_writing_data_handler_numeric" kindref="compound">WritingDataHandlerNumeric</ref> is connected to a new buffer which is updated and stored into the tag when <ref refid="classdicomhero_1_1_writing_data_handler_numeric" kindref="compound">WritingDataHandlerNumeric</ref> is destroyed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id containing the requested buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufferId</parametername>
</parameternamelist>
<parameterdescription>
<para>the position where the new buffer has to be stored in the tag. The first buffer position is 0 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tagVR</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s VR </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="classdicomhero_1_1_writing_data_handler_numeric" kindref="compound">WritingDataHandlerNumeric</ref> object connected to a new <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1182" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1af62d5be3a48bf743bb3f6a7ee1d869e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_writing_data_handler_numeric" kindref="compound">WritingDataHandlerNumeric</ref></type>
        <definition>WritingDataHandlerNumeric dicomhero::DataSet::getWritingDataHandlerRaw</definition>
        <argsstring>(const TagId &amp;tagId, size_t bufferId)</argsstring>
        <name>getWritingDataHandlerRaw</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufferId</declname>
        </param>
        <briefdescription>
<para>Retrieve a <ref refid="classdicomhero_1_1_writing_data_handler_numeric" kindref="compound">WritingDataHandlerNumeric</ref> object connected to a specific tag&apos;s buffer. The handler content is cast to bytes. </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag&apos;s VR is not a numeric type then throws std::bad_cast.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then it creates a new tag with a default VR retrieved from the <ref refid="classdicomhero_1_1_dicom_dictionary" kindref="compound">DicomDictionary</ref>.</para>
<para>The returned <ref refid="classdicomhero_1_1_writing_data_handler_numeric" kindref="compound">WritingDataHandlerNumeric</ref> is connected to a new buffer which is updated and stored into the tag when <ref refid="classdicomhero_1_1_writing_data_handler_numeric" kindref="compound">WritingDataHandlerNumeric</ref> is destroyed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id containing the requested buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufferId</parametername>
</parameternamelist>
<parameterdescription>
<para>the position where the new buffer has to be stored in the tag. The first buffer position is 0 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="classdicomhero_1_1_writing_data_handler_numeric" kindref="compound">WritingDataHandlerNumeric</ref> object connected to a new <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1202" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a20f0745a0b9cd66814699957c3a50509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setInt64</definition>
        <argsstring>(const TagId &amp;tagId, std::int64_t newValue, tagVR_t tagVR)</argsstring>
        <name>setInt64</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>newValue</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a68ed174f363e2d8f54f8e122040d03d1" kindref="member">tagVR_t</ref></type>
          <declname>tagVR</declname>
        </param>
        <briefdescription>
<para>Write a new signed 64 bit integer value into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> or buffer don&apos;t exist then a new tag is created using the specified data type (VR).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to write into the tag </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tagVR</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s type to use when a new tag is created. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1215" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a308c86c564de6aaafb2cf9e1ac7c8f1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setInt32</definition>
        <argsstring>(const TagId &amp;tagId, std::int32_t newValue, tagVR_t tagVR)</argsstring>
        <name>setInt32</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>std::int32_t</type>
          <declname>newValue</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a68ed174f363e2d8f54f8e122040d03d1" kindref="member">tagVR_t</ref></type>
          <declname>tagVR</declname>
        </param>
        <briefdescription>
<para>Write a new signed 32 bit integer value into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> or buffer don&apos;t exist then a new tag is created using the specified data type (VR).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to write into the tag </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tagVR</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s type to use when a new tag is created. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1228" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a7106d8dfaefbc98918f336737c7d36e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setSignedLong</definition>
        <argsstring>(const TagId &amp;tagId, std::int32_t newValue, tagVR_t tagVR)</argsstring>
        <name>setSignedLong</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>std::int32_t</type>
          <declname>newValue</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a68ed174f363e2d8f54f8e122040d03d1" kindref="member">tagVR_t</ref></type>
          <declname>tagVR</declname>
        </param>
        <briefdescription>
<para>Deprecated. Use <ref refid="classdicomhero_1_1_data_set_1a308c86c564de6aaafb2cf9e1ac7c8f1b" kindref="member">setInt32()</ref> instead. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1233" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a83cf153ba83586d645b7d8e90afe8335" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setInt64</definition>
        <argsstring>(const TagId &amp;tagId, std::int64_t newValue)</argsstring>
        <name>setInt64</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
<para>Write a new signed 64 bit integer value into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then it creates a new tag with a default VR retrieved from the <ref refid="classdicomhero_1_1_dicom_dictionary" kindref="compound">DicomDictionary</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to write into the tag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1245" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a27c4640091d4ddafbc437a4c343e74aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setInt32</definition>
        <argsstring>(const TagId &amp;tagId, std::int32_t newValue)</argsstring>
        <name>setInt32</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>std::int32_t</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
<para>Write a new signed 32 bit integer value into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then it creates a new tag with a default VR retrieved from the <ref refid="classdicomhero_1_1_dicom_dictionary" kindref="compound">DicomDictionary</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to write into the tag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1257" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1aa3b349b4b127ae70486f15073d795ee8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setSignedLong</definition>
        <argsstring>(const TagId &amp;tagId, std::int32_t newValue)</argsstring>
        <name>setSignedLong</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>std::int32_t</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
<para>Deprecated. Use <ref refid="classdicomhero_1_1_data_set_1a308c86c564de6aaafb2cf9e1ac7c8f1b" kindref="member">setInt32()</ref> instead. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1262" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a927a88a4f2121993a70b43a022881cd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setUint64</definition>
        <argsstring>(const TagId &amp;tagId, std::uint64_t newValue, tagVR_t tagVR)</argsstring>
        <name>setUint64</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>std::uint64_t</type>
          <declname>newValue</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a68ed174f363e2d8f54f8e122040d03d1" kindref="member">tagVR_t</ref></type>
          <declname>tagVR</declname>
        </param>
        <briefdescription>
<para>Write a new unsigned 64 bit integer value into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> doesn&apos;t exist then a new tag is created using the specified data type (VR).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to write into the tag </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tagVR</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s type to use when a new tag is created. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1275" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1acd5cbd0958793fbc45fa9e6c15721d07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setUint32</definition>
        <argsstring>(const TagId &amp;tagId, std::uint32_t newValue, tagVR_t tagVR)</argsstring>
        <name>setUint32</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>std::uint32_t</type>
          <declname>newValue</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a68ed174f363e2d8f54f8e122040d03d1" kindref="member">tagVR_t</ref></type>
          <declname>tagVR</declname>
        </param>
        <briefdescription>
<para>Write a new unsigned 32 bit integer value into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>When setting a value for an AT tag (Attribute <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>) then the tag&apos;s group must always be in the higher 16 bits of the value.</para>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> doesn&apos;t exist then a new tag is created using the specified data type (VR).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to write into the tag </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tagVR</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s type to use when a new tag is created. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1291" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a96d84cca3a0ebbbe13bc5335d605e06f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setUnsignedLong</definition>
        <argsstring>(const TagId &amp;tagId, std::uint32_t newValue, tagVR_t tagVR)</argsstring>
        <name>setUnsignedLong</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>std::uint32_t</type>
          <declname>newValue</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a68ed174f363e2d8f54f8e122040d03d1" kindref="member">tagVR_t</ref></type>
          <declname>tagVR</declname>
        </param>
        <briefdescription>
<para>Deprecated. Use <ref refid="classdicomhero_1_1_data_set_1acd5cbd0958793fbc45fa9e6c15721d07" kindref="member">setUint32()</ref> instead. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1296" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a48b710ad77bc4ba3060c00939c14071d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setUint64</definition>
        <argsstring>(const TagId &amp;tagId, std::uint64_t newValue)</argsstring>
        <name>setUint64</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>std::uint64_t</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
<para>Write a new unsigned 64 bit integer value into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then it creates a new tag with a default VR retrieved from the <ref refid="classdicomhero_1_1_dicom_dictionary" kindref="compound">DicomDictionary</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to write into the tag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1308" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1af72c5c67ce988c0cc7320d3f91fcf5dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setUint32</definition>
        <argsstring>(const TagId &amp;tagId, std::uint32_t newValue)</argsstring>
        <name>setUint32</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>std::uint32_t</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
<para>Write a new unsigned 32 bit integer value into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then it creates a new tag with a default VR retrieved from the <ref refid="classdicomhero_1_1_dicom_dictionary" kindref="compound">DicomDictionary</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to write into the tag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1320" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a574bb57ff84f739319b9d274709fcea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setUnsignedLong</definition>
        <argsstring>(const TagId &amp;tagId, std::uint32_t newValue)</argsstring>
        <name>setUnsignedLong</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>std::uint32_t</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
<para>Deprecated. Use <ref refid="classdicomhero_1_1_data_set_1acd5cbd0958793fbc45fa9e6c15721d07" kindref="member">setUint32()</ref> instead. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1325" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a6ed206c6a0de1afab397c9f3be2bd395" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setInt16</definition>
        <argsstring>(const TagId &amp;tagId, std::int16_t newValue, tagVR_t tagVR)</argsstring>
        <name>setInt16</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>std::int16_t</type>
          <declname>newValue</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a68ed174f363e2d8f54f8e122040d03d1" kindref="member">tagVR_t</ref></type>
          <declname>tagVR</declname>
        </param>
        <briefdescription>
<para>Write a new signed 16 bit integer value into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> or buffer don&apos;t exist then a new tag is created using the specified data type (VR).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to write into the tag </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tagVR</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s type to use when a new tag is created. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1338" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1ac53c763cb9193d1c7a0db52a682cce98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setInt16</definition>
        <argsstring>(const TagId &amp;tagId, std::int16_t newValue)</argsstring>
        <name>setInt16</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>std::int16_t</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
<para>Write a new signed 16 bit integer value into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then it creates a new tag with a default VR retrieved from the <ref refid="classdicomhero_1_1_dicom_dictionary" kindref="compound">DicomDictionary</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to write into the tag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1350" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a15b24b2bb75c9409ee865d3c795cf650" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setUint16</definition>
        <argsstring>(const TagId &amp;tagId, std::uint16_t newValue, tagVR_t tagVR)</argsstring>
        <name>setUint16</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>std::uint16_t</type>
          <declname>newValue</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a68ed174f363e2d8f54f8e122040d03d1" kindref="member">tagVR_t</ref></type>
          <declname>tagVR</declname>
        </param>
        <briefdescription>
<para>Write a new unsigned 16 bit integer value into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> doesn&apos;t exist then a new tag is created using the specified data type (VR).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to write into the tag </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tagVR</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s type to use when a new tag is created. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1363" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a62ea4edad926ba44f45335dad5672e0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setUint16</definition>
        <argsstring>(const TagId &amp;tagId, std::uint16_t newValue)</argsstring>
        <name>setUint16</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>std::uint16_t</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
<para>Write a new unsigned 16 bit integer value into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then it creates a new tag with a default VR retrieved from the <ref refid="classdicomhero_1_1_dicom_dictionary" kindref="compound">DicomDictionary</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to write into the tag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1375" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1ae32882e821248821d9d34b83863877a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setInt8</definition>
        <argsstring>(const TagId &amp;tagId, std::int8_t newValue, tagVR_t tagVR)</argsstring>
        <name>setInt8</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>std::int8_t</type>
          <declname>newValue</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a68ed174f363e2d8f54f8e122040d03d1" kindref="member">tagVR_t</ref></type>
          <declname>tagVR</declname>
        </param>
        <briefdescription>
<para>Write a new signed 8 bit integer value into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> or buffer don&apos;t exist then a new tag is created using the specified data type (VR).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to write into the tag </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tagVR</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s type to use when a new tag is created. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1388" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1aab802bc0d915485c9de2341a3d440cdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setInt8</definition>
        <argsstring>(const TagId &amp;tagId, std::int8_t newValue)</argsstring>
        <name>setInt8</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>std::int8_t</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
<para>Write a new signed 8 bit integer value into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then it creates a new tag with a default VR retrieved from the <ref refid="classdicomhero_1_1_dicom_dictionary" kindref="compound">DicomDictionary</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to write into the tag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1400" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a2652e5217aa4d9c75db6479b62a614f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setUint8</definition>
        <argsstring>(const TagId &amp;tagId, std::uint8_t newValue, tagVR_t tagVR)</argsstring>
        <name>setUint8</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>std::uint8_t</type>
          <declname>newValue</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a68ed174f363e2d8f54f8e122040d03d1" kindref="member">tagVR_t</ref></type>
          <declname>tagVR</declname>
        </param>
        <briefdescription>
<para>Write a new unsigned 8 bit integer value into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> doesn&apos;t exist then a new tag is created using the specified data type (VR).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to write into the tag </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tagVR</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s type to use when a new tag is created. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1413" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1af5e87698fc4b9c5d65aa0fb179422f0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setUint8</definition>
        <argsstring>(const TagId &amp;tagId, std::uint8_t newValue)</argsstring>
        <name>setUint8</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>std::uint8_t</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
<para>Write a new unsigned 8 bit integer value into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then it creates a new tag with a default VR retrieved from the <ref refid="classdicomhero_1_1_dicom_dictionary" kindref="compound">DicomDictionary</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to write into the tag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1425" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a8fda333f4fa1107afd9018f36e7d08c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setDouble</definition>
        <argsstring>(const TagId &amp;tagId, double newValue, tagVR_t tagVR)</argsstring>
        <name>setDouble</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>double</type>
          <declname>newValue</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a68ed174f363e2d8f54f8e122040d03d1" kindref="member">tagVR_t</ref></type>
          <declname>tagVR</declname>
        </param>
        <briefdescription>
<para>Write a 64 bit floating point value into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> or buffer don&apos;t exist then a new tag is created using the specified data type (VR).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to write into the tag </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tagVR</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s type to use when a new tag is created. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1438" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a52e3baebbecf28146c51f02067ce009a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setDouble</definition>
        <argsstring>(const TagId &amp;tagId, double newValue)</argsstring>
        <name>setDouble</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>double</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
<para>Write a 64 bit floating point value into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then it creates a new tag with a default VR retrieved from the <ref refid="classdicomhero_1_1_dicom_dictionary" kindref="compound">DicomDictionary</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to write into the tag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1450" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a7fb34a6e91a3be2e757d6eaac787c791" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setFloat</definition>
        <argsstring>(const TagId &amp;tagId, float newValue, tagVR_t tagVR)</argsstring>
        <name>setFloat</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>float</type>
          <declname>newValue</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a68ed174f363e2d8f54f8e122040d03d1" kindref="member">tagVR_t</ref></type>
          <declname>tagVR</declname>
        </param>
        <briefdescription>
<para>Write a 32 bit floating point value into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> or buffer don&apos;t exist then a new tag is created using the specified data type (VR).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to write into the tag </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tagVR</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s type to use when a new tag is created. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1463" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1aa9d8f31868e41d9d1b12167d978acb5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setFloat</definition>
        <argsstring>(const TagId &amp;tagId, float newValue)</argsstring>
        <name>setFloat</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>float</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
<para>Write a 32 bit floating point value into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then it creates a new tag with a default VR retrieved from the <ref refid="classdicomhero_1_1_dicom_dictionary" kindref="compound">DicomDictionary</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newValue</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to write into the tag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1475" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a38e9cfb458f9c182247b6248d0764b8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setString</definition>
        <argsstring>(const TagId &amp;tagId, const std::string &amp;newString, tagVR_t tagVR)</argsstring>
        <name>setString</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>newString</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a68ed174f363e2d8f54f8e122040d03d1" kindref="member">tagVR_t</ref></type>
          <declname>tagVR</declname>
        </param>
        <briefdescription>
<para>Write a UTF8 string value into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then it creates a new tag with a specific VR.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newString</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to write into the tag </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tagVR</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s type to use when a new tag is created. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1488" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a604fb679e0d2d4d9b46253864a87fad4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setString</definition>
        <argsstring>(const TagId &amp;tagId, const std::string &amp;newString)</argsstring>
        <name>setString</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>newString</declname>
        </param>
        <briefdescription>
<para>Write a UTF8 string value into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then it creates a new tag with a default VR retrieved from the <ref refid="classdicomhero_1_1_dicom_dictionary" kindref="compound">DicomDictionary</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newString</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to write into the tag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1500" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a814c96e4ec38cacbd871a85db42df975" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setUnicodeString</definition>
        <argsstring>(const TagId &amp;tagId, const std::wstring &amp;newString, tagVR_t tagVR)</argsstring>
        <name>setUnicodeString</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>const std::wstring &amp;</type>
          <declname>newString</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a68ed174f363e2d8f54f8e122040d03d1" kindref="member">tagVR_t</ref></type>
          <declname>tagVR</declname>
        </param>
        <briefdescription>
<para>Write an unicode string value into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> doesn&apos;t exist then a new tag is created using the specified VR.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newString</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to write into the tag </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tagVR</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s type to use when a new tag is created. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1514" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a75ccf65b47be4b3192cb287d4ad3fe0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setUnicodeString</definition>
        <argsstring>(const TagId &amp;tagId, const std::wstring &amp;newString)</argsstring>
        <name>setUnicodeString</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>const std::wstring &amp;</type>
          <declname>newString</declname>
        </param>
        <briefdescription>
<para>Write an unicode string value into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then it creates a new tag with a default VR retrieved from the <ref refid="classdicomhero_1_1_dicom_dictionary" kindref="compound">DicomDictionary</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newString</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to write into the tag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1526" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1aa4b4e9bc4fbe8f127a79adaf833641d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setAge</definition>
        <argsstring>(const TagId &amp;tagId, const Age &amp;age)</argsstring>
        <name>setAge</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>const <ref refid="classdicomhero_1_1_age" kindref="compound">Age</ref> &amp;</type>
          <declname>age</declname>
        </param>
        <briefdescription>
<para>Write an <ref refid="classdicomhero_1_1_age" kindref="compound">Age</ref> string into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> doesn&apos;t exist then a new tag and is created using the VR <ref refid="definitions_8h_1a68ed174f363e2d8f54f8e122040d03d1aa2c29192484301fa800100e16e494acf" kindref="member">tagVR_t::AS</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>age</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classdicomhero_1_1_age" kindref="compound">Age</ref> to write into the tag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1539" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1ab7d2b3edcefa0c7c9bd62b015a30c962" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setDate</definition>
        <argsstring>(const TagId &amp;tagId, const Date &amp;date, tagVR_t tagVR)</argsstring>
        <name>setDate</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>const <ref refid="classdicomhero_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>date</declname>
        </param>
        <param>
          <type><ref refid="definitions_8h_1a68ed174f363e2d8f54f8e122040d03d1" kindref="member">tagVR_t</ref></type>
          <declname>tagVR</declname>
        </param>
        <briefdescription>
<para>Write a <ref refid="classdicomhero_1_1_date" kindref="compound">Date</ref> string into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> or buffer don&apos;t exist then a new tag and/or buffer are created using the specified data type (VR).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>date</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classdicomhero_1_1_date" kindref="compound">Date</ref> to write into the tag </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tagVR</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s type to use when a new tag is created. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1552" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a6d2849acfb9eb0a8172f97e15c33fa50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setDate</definition>
        <argsstring>(const TagId &amp;tagId, const Date &amp;date)</argsstring>
        <name>setDate</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>const <ref refid="classdicomhero_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>date</declname>
        </param>
        <briefdescription>
<para>Write a <ref refid="classdicomhero_1_1_date" kindref="compound">Date</ref> string into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then it creates a new tag with a default VR retrieved from the <ref refid="classdicomhero_1_1_dicom_dictionary" kindref="compound">DicomDictionary</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>date</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classdicomhero_1_1_date" kindref="compound">Date</ref> to write into the tag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1564" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a8508e71030421160af28603ead54682c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setPatientName</definition>
        <argsstring>(const TagId &amp;tagId, const PatientName &amp;patientName)</argsstring>
        <name>setPatientName</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>const <ref refid="classdicomhero_1_1_patient_name" kindref="compound">PatientName</ref> &amp;</type>
          <declname>patientName</declname>
        </param>
        <briefdescription>
<para>Write a Patient Name into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then it creates a new tag with a VR PN.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>date</parametername>
</parameternamelist>
<parameterdescription>
<para>the Patient Name to write into the tag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1576" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a528d81ff7ffa94351c713f19cef407f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; dicomhero::DataSet::setUnicodePatientName</definition>
        <argsstring>(const TagId &amp;tagId, const UnicodePatientName &amp;patientName)</argsstring>
        <name>setUnicodePatientName</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <param>
          <type>const <ref refid="classdicomhero_1_1_unicode_patient_name" kindref="compound">UnicodePatientName</ref> &amp;</type>
          <declname>patientName</declname>
        </param>
        <briefdescription>
<para>Write a Unicode Patient Name into the element 0 of the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref>&apos;s buffer 0. </para>
        </briefdescription>
        <detaileddescription>
<para>If the specified <ref refid="classdicomhero_1_1_tag" kindref="compound">Tag</ref> does not exist then it creates a new tag with a VR PN.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>date</parametername>
</parameternamelist>
<parameterdescription>
<para>the Unicode Patient Name to write into the tag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1590" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a9dea62a569bb66bbdd3e8ec5802cfdb4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="definitions_8h_1a68ed174f363e2d8f54f8e122040d03d1" kindref="member">tagVR_t</ref></type>
        <definition>tagVR_t dicomhero::DataSet::getDataType</definition>
        <argsstring>(const TagId &amp;tagId) const</argsstring>
        <name>getDataType</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_tag_id" kindref="compound">TagId</ref> &amp;</type>
          <declname>tagId</declname>
        </param>
        <briefdescription>
<para>Return the 2 chars data type (VR) of the specified tag. </para>
        </briefdescription>
        <detaileddescription>
<para>If the tag not exist then throws <ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref> or <ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagId</parametername>
</parameternamelist>
<parameterdescription>
<para>the id of the tag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the tag&apos;s data type (VR) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1602" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a610486d7150a073b86b60f0274ce33a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>charsetsList_t</type>
        <definition>charsetsList_t dicomhero::DataSet::getCharsetsList</definition>
        <argsstring>() const</argsstring>
        <name>getCharsetsList</name>
        <briefdescription>
<para>Return the list of charsets used by the dataset to convert strings to/from unicode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the list of charsets used by teh dataset to convert strings to/from unicode </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1611" column="20"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classdicomhero_1_1_data_set_1a8ceb7ad0afdda6dcb1012bf3762a100f" prot="protected" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>dicomhero::DataSet::DataSet</definition>
        <argsstring>(const std::shared_ptr&lt; dicomhero::implementation::dataSet &gt; &amp;pDataSet)</argsstring>
        <name>DataSet</name>
        <param>
          <type>const std::shared_ptr&lt; dicomhero::implementation::dataSet &gt; &amp;</type>
          <declname>pDataSet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="1615" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class represents a DICOM dataset. </para>
    </briefdescription>
    <detaileddescription>
<para>The information it contains is organized into groups and each group may contain several tags.</para>
<para>You can create a <ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> from a DICOM file by using the <ref refid="classdicomhero_1_1_codec_factory_1a8edab7e6bac85df1feb0815f5a51f9f4" kindref="member">CodecFactory::load()</ref> function:</para>
<para>In C++: <programlisting><codeline><highlight class="normal">using<sp/>namespace<sp/>dicomhero;</highlight></codeline>
<codeline><highlight class="normal">DataSet<sp/>dataSet<sp/>=<sp/>CodecFactory::load(&quot;/path/to/file&quot;);</highlight></codeline>
</programlisting></para>
<para>In Java: <programlisting><codeline><highlight class="normal">com.dicomhero.DataSet<sp/>dataSet<sp/>=<sp/>com.dicomhero.CodecFactory.load(&quot;/path/to/file&quot;);</highlight></codeline>
</programlisting></para>
<para>To retrieve the <ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref>&apos;s content, use one of the following methods which give direct access to the tags&apos; values:<itemizedlist>
<listitem><para><ref refid="classdicomhero_1_1_data_set_1a6b84f820d980b3f58fcf11981ccd9c13" kindref="member">getImage()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1a0457c4d709d0f149325c755a2c06dd0f" kindref="member">getImageApplyModalityTransform()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1a350cbb5cd19f67bc00e84648f0a02b7d" kindref="member">getSequenceItem()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1a828ca1f5edb1b61ac155aa923141b0df" kindref="member">getInt64()</ref></para>
</listitem><listitem><para>getUInt64()</para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1a14310facc365e56f58b495860f7d8d14" kindref="member">getInt32()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1a1aeaeaaf83f92dba4738922a40b56369" kindref="member">getUint32()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1a46fad6e5282d5b178ab62f1fd18aa0d4" kindref="member">getInt16()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1a01aa692d1da5d88f5166e26f88dc396d" kindref="member">getUint16()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1a2102225f15e99f0767b0837b0050ebc1" kindref="member">getInt8()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1a56482ea1b288e62854463574bbeca3cb" kindref="member">getUint8()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1a1b61754d1c20b5568db14c02335d0325" kindref="member">getDouble()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1ac3bbaa58ed791f4e3b337ec43638e4fc" kindref="member">getFloat()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1a7409e28982bd6923736166529903446e" kindref="member">getString()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1ab82131b0d5a7ede668a28545d50a73f5" kindref="member">getUnicodeString()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1abca48a77c5627bed350ce216a3d6677f" kindref="member">getAge()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1ac9c0a6ab9927b64a5f3c8e3b24af5b36" kindref="member">getDate()</ref></para>
</listitem></itemizedlist>
</para>
<para>In alternative, you can first retrieve a <ref refid="classdicomhero_1_1_reading_data_handler" kindref="compound">ReadingDataHandler</ref> with <ref refid="classdicomhero_1_1_data_set_1afbf1d647fd892740fb171d42470934d7" kindref="member">getReadingDataHandler()</ref> and then access the tag&apos;s content via the handler.</para>
<para>You can create an empty <ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> that can be filled with data and images and then saved to a DICOM file via <ref refid="classdicomhero_1_1_codec_factory_1a284b7a2857db66f9449a79d14c22b8fb" kindref="member">CodecFactory::save()</ref>.</para>
<para>When creating an empty <ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> you should specify the proper transfer syntax in the <ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> constructor.</para>
<para>To set the <ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref>&apos;s content, use one of the following methods:<itemizedlist>
<listitem><para><ref refid="classdicomhero_1_1_data_set_1acbc4fd2b0d6786392e5ac43567870b13" kindref="member">setImage()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1a631855d271891e54a6b64488d7036d82" kindref="member">appendSequenceItem()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1a20f0745a0b9cd66814699957c3a50509" kindref="member">setInt64()</ref></para>
</listitem><listitem><para>setUInt64()</para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1acd5cbd0958793fbc45fa9e6c15721d07" kindref="member">setUint32()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1a6ed206c6a0de1afab397c9f3be2bd395" kindref="member">setInt16()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1a15b24b2bb75c9409ee865d3c795cf650" kindref="member">setUint16()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1ae32882e821248821d9d34b83863877a1" kindref="member">setInt8()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1a2652e5217aa4d9c75db6479b62a614f5" kindref="member">setUint8()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1a8fda333f4fa1107afd9018f36e7d08c4" kindref="member">setDouble()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1a7fb34a6e91a3be2e757d6eaac787c791" kindref="member">setFloat()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1a38e9cfb458f9c182247b6248d0764b8b" kindref="member">setString()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1a814c96e4ec38cacbd871a85db42df975" kindref="member">setUnicodeString()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1aa4b4e9bc4fbe8f127a79adaf833641d9" kindref="member">setAge()</ref></para>
</listitem><listitem><para><ref refid="classdicomhero_1_1_data_set_1ab7d2b3edcefa0c7c9bd62b015a30c962" kindref="member">setDate()</ref></para>
</listitem></itemizedlist>
</para>
<para>The previous methods allow to write just the first item in the tag&apos;s content and before writing wipe out the old tag&apos;s content (all the items). If you have to write more than one item in a tag, retrieve a <ref refid="classdicomhero_1_1_writing_data_handler" kindref="compound">WritingDataHandler</ref> with <ref refid="classdicomhero_1_1_data_set_1a924ce70603998676d3cad779ec135c76" kindref="member">getWritingDataHandler()</ref> and then modify all the tag&apos;s items using the <ref refid="classdicomhero_1_1_writing_data_handler" kindref="compound">WritingDataHandler</ref>. </para>
    </detaileddescription>
    <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" line="122" column="1" bodyfile="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/dataSet.h" bodystart="123" bodyend="1621"/>
    <listofallmembers>
      <member refid="classdicomhero_1_1_data_set_1a631855d271891e54a6b64488d7036d82" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>appendSequenceItem</name></member>
      <member refid="classdicomhero_1_1_data_set_1ae7605469f7ad8eae64d956c2f16b29c4" prot="private" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>AssociationMessage</name></member>
      <member refid="classdicomhero_1_1_data_set_1a173aebb77c7b11aa7b445ff75018505c" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>bufferExists</name></member>
      <member refid="classdicomhero_1_1_data_set_1a23c0ade62d1edf18d9097d5ffda4417f" prot="private" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>CodecFactory</name></member>
      <member refid="classdicomhero_1_1_data_set_1aac1eec7ccd910ba9cb756cf48847e2b5" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>DataSet</name></member>
      <member refid="classdicomhero_1_1_data_set_1a80cf97e8cce263ab7ff0f782b09ed3ee" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>DataSet</name></member>
      <member refid="classdicomhero_1_1_data_set_1a8986bb7996b1137ac5c473a102fe78de" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>DataSet</name></member>
      <member refid="classdicomhero_1_1_data_set_1a5dc9ad31ff2d9605abac2a228981af41" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>DataSet</name></member>
      <member refid="classdicomhero_1_1_data_set_1a8ceb7ad0afdda6dcb1012bf3762a100f" prot="protected" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>DataSet</name></member>
      <member refid="classdicomhero_1_1_data_set_1a435d1ec40c90f6b11ae3dfbd30114243" prot="private" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>DicomDir</name></member>
      <member refid="classdicomhero_1_1_data_set_1a500bbba8be6bd184454693ee101d47bc" prot="private" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>DicomDirEntry</name></member>
      <member refid="classdicomhero_1_1_data_set_1a720740d5350f252aee0beced2614daee" prot="private" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>DimseCommandBase</name></member>
      <member refid="classdicomhero_1_1_data_set_1abca48a77c5627bed350ce216a3d6677f" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getAge</name></member>
      <member refid="classdicomhero_1_1_data_set_1aabbe47a259533f83c05bd755494954c4" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getAge</name></member>
      <member refid="classdicomhero_1_1_data_set_1a610486d7150a073b86b60f0274ce33a3" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getCharsetsList</name></member>
      <member refid="classdicomhero_1_1_data_set_1a568d847a9f3e12f9a12e1f0189394c22" prot="private" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getDataSetImplementation</name></member>
      <member refid="classdicomhero_1_1_data_set_1a9dea62a569bb66bbdd3e8ec5802cfdb4" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getDataType</name></member>
      <member refid="classdicomhero_1_1_data_set_1ac9c0a6ab9927b64a5f3c8e3b24af5b36" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getDate</name></member>
      <member refid="classdicomhero_1_1_data_set_1a7ccd6c0a25ad9693525132f2145145a4" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getDate</name></member>
      <member refid="classdicomhero_1_1_data_set_1a1b61754d1c20b5568db14c02335d0325" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getDouble</name></member>
      <member refid="classdicomhero_1_1_data_set_1a74ab9f6a25579494ca323c300ec3799a" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getDouble</name></member>
      <member refid="classdicomhero_1_1_data_set_1ac3bbaa58ed791f4e3b337ec43638e4fc" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getFloat</name></member>
      <member refid="classdicomhero_1_1_data_set_1a67843ba6811544bfb3e62fd34f3ac2d2" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getFloat</name></member>
      <member refid="classdicomhero_1_1_data_set_1ad3a4f6e5a336f1bae983d56aba07e78d" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getFunctionalGroupDataSet</name></member>
      <member refid="classdicomhero_1_1_data_set_1a6b84f820d980b3f58fcf11981ccd9c13" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getImage</name></member>
      <member refid="classdicomhero_1_1_data_set_1a0457c4d709d0f149325c755a2c06dd0f" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getImageApplyModalityTransform</name></member>
      <member refid="classdicomhero_1_1_data_set_1a46fad6e5282d5b178ab62f1fd18aa0d4" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getInt16</name></member>
      <member refid="classdicomhero_1_1_data_set_1a8d3784eac4639eb77ee21eeaa755f7f2" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getInt16</name></member>
      <member refid="classdicomhero_1_1_data_set_1a14310facc365e56f58b495860f7d8d14" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getInt32</name></member>
      <member refid="classdicomhero_1_1_data_set_1acae1822ce7e3095d538274fe29822a4c" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getInt32</name></member>
      <member refid="classdicomhero_1_1_data_set_1a828ca1f5edb1b61ac155aa923141b0df" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getInt64</name></member>
      <member refid="classdicomhero_1_1_data_set_1a6520ea07f3ac247517028ddf8d21a1a9" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getInt64</name></member>
      <member refid="classdicomhero_1_1_data_set_1a2102225f15e99f0767b0837b0050ebc1" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getInt8</name></member>
      <member refid="classdicomhero_1_1_data_set_1a038b6ce8630f540be37fb66927a1e08c" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getInt8</name></member>
      <member refid="classdicomhero_1_1_data_set_1a882d093fb0ecd5fbc72f9911e602c3ef" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getLUT</name></member>
      <member refid="classdicomhero_1_1_data_set_1a9b61ef5b5c31f44feb2bbddbe1ec8149" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getOverlay</name></member>
      <member refid="classdicomhero_1_1_data_set_1a315a077a6efb058a34ab0939a0041255" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getPatientName</name></member>
      <member refid="classdicomhero_1_1_data_set_1a2c028e2b8151a9d05a3431d0dee1e12a" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getPatientName</name></member>
      <member refid="classdicomhero_1_1_data_set_1afbf1d647fd892740fb171d42470934d7" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getReadingDataHandler</name></member>
      <member refid="classdicomhero_1_1_data_set_1ac816e83237820c7a5860374fe716f086" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getReadingDataHandlerNumeric</name></member>
      <member refid="classdicomhero_1_1_data_set_1a7fd6365b07ed5ec23e3bc1dcf9331f03" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getReadingDataHandlerRaw</name></member>
      <member refid="classdicomhero_1_1_data_set_1a350cbb5cd19f67bc00e84648f0a02b7d" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getSequenceItem</name></member>
      <member refid="classdicomhero_1_1_data_set_1ad10c9d675ec46a8d2db1d4df25ce173d" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getSignedLong</name></member>
      <member refid="classdicomhero_1_1_data_set_1a56c378b03712a2b23583d9790dcafb62" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getSignedLong</name></member>
      <member refid="classdicomhero_1_1_data_set_1aa39572a2b90b7a4953aa4869b175aef2" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getStreamReader</name></member>
      <member refid="classdicomhero_1_1_data_set_1ae1e426a4eff9aa609558e06e7fa9e462" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getStreamWriter</name></member>
      <member refid="classdicomhero_1_1_data_set_1acf6b4b04a548b29c4d429ae6d084423b" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getStreamWriter</name></member>
      <member refid="classdicomhero_1_1_data_set_1a7409e28982bd6923736166529903446e" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getString</name></member>
      <member refid="classdicomhero_1_1_data_set_1a1c8f8b7df3831675436dcc271b9a366e" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getString</name></member>
      <member refid="classdicomhero_1_1_data_set_1a0e992513efc3adb002be9bed1fa65207" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getTag</name></member>
      <member refid="classdicomhero_1_1_data_set_1a858c319e2df6600b39584d9401abea3a" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getTagCreate</name></member>
      <member refid="classdicomhero_1_1_data_set_1ab9da739bfb7614cdb44b0e39690c9f67" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getTagCreate</name></member>
      <member refid="classdicomhero_1_1_data_set_1a5b67081401077b403fc23bf9a8e38332" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getTags</name></member>
      <member refid="classdicomhero_1_1_data_set_1a01aa692d1da5d88f5166e26f88dc396d" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getUint16</name></member>
      <member refid="classdicomhero_1_1_data_set_1aed920876636644cddf2c3fd65ca9bf53" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getUint16</name></member>
      <member refid="classdicomhero_1_1_data_set_1a1aeaeaaf83f92dba4738922a40b56369" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getUint32</name></member>
      <member refid="classdicomhero_1_1_data_set_1a7f6bbb616db146695051232f15093ac5" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getUint32</name></member>
      <member refid="classdicomhero_1_1_data_set_1a94f0f4c9d121f9ffb5cf0674bbc3e63f" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getUint64</name></member>
      <member refid="classdicomhero_1_1_data_set_1a7c25eb6b7cb9300e1ac20ea55ad5f0b2" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getUint64</name></member>
      <member refid="classdicomhero_1_1_data_set_1a56482ea1b288e62854463574bbeca3cb" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getUint8</name></member>
      <member refid="classdicomhero_1_1_data_set_1ae232914b3d5cb6f0814414122de4d050" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getUint8</name></member>
      <member refid="classdicomhero_1_1_data_set_1ae2b20bfd60d59ae3d9ec64b4b42721bf" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getUnicodePatientName</name></member>
      <member refid="classdicomhero_1_1_data_set_1a0455a23e3c1bad12f3d23193f3cacf0f" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getUnicodePatientName</name></member>
      <member refid="classdicomhero_1_1_data_set_1ab82131b0d5a7ede668a28545d50a73f5" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getUnicodeString</name></member>
      <member refid="classdicomhero_1_1_data_set_1a603836875dbd32d9ce5d3d62df8f36ce" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getUnicodeString</name></member>
      <member refid="classdicomhero_1_1_data_set_1a2c943f175f8c19995e8be533b6e50f0c" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getUnsignedLong</name></member>
      <member refid="classdicomhero_1_1_data_set_1a50cf389be1e746632511f6b4b76fe0a8" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getUnsignedLong</name></member>
      <member refid="classdicomhero_1_1_data_set_1a336d7fcf4b028b07135bca1d0f7f2962" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getVOIs</name></member>
      <member refid="classdicomhero_1_1_data_set_1a924ce70603998676d3cad779ec135c76" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getWritingDataHandler</name></member>
      <member refid="classdicomhero_1_1_data_set_1a96f17907ae8a892530d93562da470672" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getWritingDataHandler</name></member>
      <member refid="classdicomhero_1_1_data_set_1a9f6185976074f5bbde298e2a0119386f" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getWritingDataHandlerNumeric</name></member>
      <member refid="classdicomhero_1_1_data_set_1a7b48cd65dad2f0c3d0d992d2a5e48baa" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getWritingDataHandlerNumeric</name></member>
      <member refid="classdicomhero_1_1_data_set_1a39b6c34baff5d65e2d6b09c8cda00071" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getWritingDataHandlerRaw</name></member>
      <member refid="classdicomhero_1_1_data_set_1af62d5be3a48bf743bb3f6a7ee1d869e3" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>getWritingDataHandlerRaw</name></member>
      <member refid="classdicomhero_1_1_data_set_1ae2cac21f2e28c47f70f372155b271aa7" prot="private" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>m_pDataSet</name></member>
      <member refid="classdicomhero_1_1_data_set_1ab0670f7da2e5c17f9408b9605144c6c7" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>operator=</name></member>
      <member refid="classdicomhero_1_1_data_set_1aa4b4e9bc4fbe8f127a79adaf833641d9" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setAge</name></member>
      <member refid="classdicomhero_1_1_data_set_1ab7d2b3edcefa0c7c9bd62b015a30c962" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setDate</name></member>
      <member refid="classdicomhero_1_1_data_set_1a6d2849acfb9eb0a8172f97e15c33fa50" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setDate</name></member>
      <member refid="classdicomhero_1_1_data_set_1a8fda333f4fa1107afd9018f36e7d08c4" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setDouble</name></member>
      <member refid="classdicomhero_1_1_data_set_1a52e3baebbecf28146c51f02067ce009a" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setDouble</name></member>
      <member refid="classdicomhero_1_1_data_set_1a7fb34a6e91a3be2e757d6eaac787c791" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setFloat</name></member>
      <member refid="classdicomhero_1_1_data_set_1aa9d8f31868e41d9d1b12167d978acb5f" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setFloat</name></member>
      <member refid="classdicomhero_1_1_data_set_1acbc4fd2b0d6786392e5ac43567870b13" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setImage</name></member>
      <member refid="classdicomhero_1_1_data_set_1a6ed206c6a0de1afab397c9f3be2bd395" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setInt16</name></member>
      <member refid="classdicomhero_1_1_data_set_1ac53c763cb9193d1c7a0db52a682cce98" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setInt16</name></member>
      <member refid="classdicomhero_1_1_data_set_1a308c86c564de6aaafb2cf9e1ac7c8f1b" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setInt32</name></member>
      <member refid="classdicomhero_1_1_data_set_1a27c4640091d4ddafbc437a4c343e74aa" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setInt32</name></member>
      <member refid="classdicomhero_1_1_data_set_1a20f0745a0b9cd66814699957c3a50509" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setInt64</name></member>
      <member refid="classdicomhero_1_1_data_set_1a83cf153ba83586d645b7d8e90afe8335" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setInt64</name></member>
      <member refid="classdicomhero_1_1_data_set_1ae32882e821248821d9d34b83863877a1" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setInt8</name></member>
      <member refid="classdicomhero_1_1_data_set_1aab802bc0d915485c9de2341a3d440cdd" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setInt8</name></member>
      <member refid="classdicomhero_1_1_data_set_1af73b74cf3457f19887b90bd9da775f84" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setOverlay</name></member>
      <member refid="classdicomhero_1_1_data_set_1a8508e71030421160af28603ead54682c" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setPatientName</name></member>
      <member refid="classdicomhero_1_1_data_set_1a7106d8dfaefbc98918f336737c7d36e3" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setSignedLong</name></member>
      <member refid="classdicomhero_1_1_data_set_1aa3b349b4b127ae70486f15073d795ee8" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setSignedLong</name></member>
      <member refid="classdicomhero_1_1_data_set_1a38e9cfb458f9c182247b6248d0764b8b" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setString</name></member>
      <member refid="classdicomhero_1_1_data_set_1a604fb679e0d2d4d9b46253864a87fad4" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setString</name></member>
      <member refid="classdicomhero_1_1_data_set_1a15b24b2bb75c9409ee865d3c795cf650" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setUint16</name></member>
      <member refid="classdicomhero_1_1_data_set_1a62ea4edad926ba44f45335dad5672e0b" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setUint16</name></member>
      <member refid="classdicomhero_1_1_data_set_1acd5cbd0958793fbc45fa9e6c15721d07" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setUint32</name></member>
      <member refid="classdicomhero_1_1_data_set_1af72c5c67ce988c0cc7320d3f91fcf5dc" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setUint32</name></member>
      <member refid="classdicomhero_1_1_data_set_1a927a88a4f2121993a70b43a022881cd7" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setUint64</name></member>
      <member refid="classdicomhero_1_1_data_set_1a48b710ad77bc4ba3060c00939c14071d" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setUint64</name></member>
      <member refid="classdicomhero_1_1_data_set_1a2652e5217aa4d9c75db6479b62a614f5" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setUint8</name></member>
      <member refid="classdicomhero_1_1_data_set_1af5e87698fc4b9c5d65aa0fb179422f0f" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setUint8</name></member>
      <member refid="classdicomhero_1_1_data_set_1a528d81ff7ffa94351c713f19cef407f8" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setUnicodePatientName</name></member>
      <member refid="classdicomhero_1_1_data_set_1a814c96e4ec38cacbd871a85db42df975" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setUnicodeString</name></member>
      <member refid="classdicomhero_1_1_data_set_1a75ccf65b47be4b3192cb287d4ad3fe0a" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setUnicodeString</name></member>
      <member refid="classdicomhero_1_1_data_set_1a96d84cca3a0ebbbe13bc5335d605e06f" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setUnsignedLong</name></member>
      <member refid="classdicomhero_1_1_data_set_1a574bb57ff84f739319b9d274709fcea6" prot="public" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>setUnsignedLong</name></member>
      <member refid="classdicomhero_1_1_data_set_1afc8c1b0e7f1fedf25715bd33b74eb56c" prot="private" virt="non-virtual"><scope>dicomhero::DataSet</scope><name>Tag</name></member>
      <member refid="classdicomhero_1_1_data_set_1ac1a180180497e5d64931257cf1e6ba36" prot="public" virt="virtual"><scope>dicomhero::DataSet</scope><name>~DataSet</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
