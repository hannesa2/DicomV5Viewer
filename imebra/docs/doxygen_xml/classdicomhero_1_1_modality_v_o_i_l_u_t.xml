<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classdicomhero_1_1_modality_v_o_i_l_u_t" kind="class" language="C++" prot="public">
    <compoundname>dicomhero::ModalityVOILUT</compoundname>
    <basecompoundref refid="classdicomhero_1_1_transform" prot="public" virt="non-virtual">dicomhero::Transform</basecompoundref>
    <includes local="no">modalityVOILUT.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdicomhero_1_1_modality_v_o_i_l_u_t_1a142c528956d954b0988712c258eeb348" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>dicomhero::ModalityVOILUT::ModalityVOILUT</definition>
        <argsstring>(const DataSet &amp;dataset)</argsstring>
        <name>ModalityVOILUT</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> &amp;</type>
          <declname>dataset</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataset</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classdicomhero_1_1_data_set" kindref="compound">DataSet</ref> from which the modality VOI or <ref refid="classdicomhero_1_1_l_u_t" kindref="compound">LUT</ref> data is retrieved. If the modality VOI/LUT information is stored in a functional group, then first use <ref refid="classdicomhero_1_1_data_set_1ad3a4f6e5a336f1bae983d56aba07e78d" kindref="member">DataSet::getFunctionalGroupDataSet()</ref> to retrieve the sequence item containing the modality VOI/LUT information and pass that item as parameter to this constructor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/modalityVOILUT.h" line="62" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_modality_v_o_i_l_u_t_1a6d0d30989eea245baecc116a9b0a7bcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dicomhero::ModalityVOILUT::ModalityVOILUT</definition>
        <argsstring>(const ModalityVOILUT &amp;source)</argsstring>
        <name>ModalityVOILUT</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_modality_v_o_i_l_u_t" kindref="compound">ModalityVOILUT</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>source <ref refid="classdicomhero_1_1_modality_v_o_i_l_u_t" kindref="compound">ModalityVOILUT</ref> object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/modalityVOILUT.h" line="70" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_modality_v_o_i_l_u_t_1ab42ed77f08622621e797be0269925e76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_modality_v_o_i_l_u_t" kindref="compound">ModalityVOILUT</ref> &amp;</type>
        <definition>ModalityVOILUT&amp; dicomhero::ModalityVOILUT::operator=</definition>
        <argsstring>(const ModalityVOILUT &amp;source)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_modality_v_o_i_l_u_t" kindref="compound">ModalityVOILUT</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/modalityVOILUT.h" line="72" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_modality_v_o_i_l_u_t_1a266603de8173ed4fb0b7c39debe21c23" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual dicomhero::ModalityVOILUT::~ModalityVOILUT</definition>
        <argsstring>()</argsstring>
        <name>~ModalityVOILUT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/modalityVOILUT.h" line="74" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classdicomhero_1_1_modality_v_o_i_l_u_t" kindref="compound">ModalityVOILUT</ref> transform applies the Modality VOI or <ref refid="classdicomhero_1_1_l_u_t" kindref="compound">LUT</ref> to the input image. </para>
    </briefdescription>
    <detaileddescription>
<para>The Modality VOI/LUT applies a rescale intercept and a slope to transform the pixel values of the image into values that are meaningful to the application.</para>
<para>For instance, the original pixel values could store a device specific value that has a meaning only when used by the device that generated it: applying the rescale slope/intercept to pixel value converts the original values into optical density or other known measurement units (e.g. Hounsfield).</para>
<para>When the transformation is not linear, then a <ref refid="classdicomhero_1_1_l_u_t" kindref="compound">LUT</ref> (lookup table) is applied. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>dicomhero::Transform</label>
        <link refid="classdicomhero_1_1_transform"/>
      </node>
      <node id="1">
        <label>dicomhero::ModalityVOILUT</label>
        <link refid="classdicomhero_1_1_modality_v_o_i_l_u_t"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>dicomhero::Transform</label>
        <link refid="classdicomhero_1_1_transform"/>
      </node>
      <node id="1">
        <label>dicomhero::ModalityVOILUT</label>
        <link refid="classdicomhero_1_1_modality_v_o_i_l_u_t"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/modalityVOILUT.h" line="48" column="1" bodyfile="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/modalityVOILUT.h" bodystart="49" bodyend="75"/>
    <listofallmembers>
      <member refid="classdicomhero_1_1_transform_1a98f9eaf07e09528a9cbb7de0b0603236" prot="public" virt="non-virtual"><scope>dicomhero::ModalityVOILUT</scope><name>allocateOutputImage</name></member>
      <member refid="classdicomhero_1_1_transform_1adfd81c2070af065ec0d797f6b83c06b6" prot="public" virt="non-virtual"><scope>dicomhero::ModalityVOILUT</scope><name>isEmpty</name></member>
      <member refid="classdicomhero_1_1_modality_v_o_i_l_u_t_1a142c528956d954b0988712c258eeb348" prot="public" virt="non-virtual"><scope>dicomhero::ModalityVOILUT</scope><name>ModalityVOILUT</name></member>
      <member refid="classdicomhero_1_1_modality_v_o_i_l_u_t_1a6d0d30989eea245baecc116a9b0a7bcf" prot="public" virt="non-virtual"><scope>dicomhero::ModalityVOILUT</scope><name>ModalityVOILUT</name></member>
      <member refid="classdicomhero_1_1_modality_v_o_i_l_u_t_1ab42ed77f08622621e797be0269925e76" prot="public" virt="non-virtual"><scope>dicomhero::ModalityVOILUT</scope><name>operator=</name></member>
      <member refid="classdicomhero_1_1_transform_1ade62af813980d1a890ff24b7288c3a69" prot="public" virt="non-virtual" ambiguityscope="dicomhero::Transform::"><scope>dicomhero::ModalityVOILUT</scope><name>operator=</name></member>
      <member refid="classdicomhero_1_1_transform_1a8fe6e274f0ab08fc9d5a64cf414d77ba" prot="public" virt="non-virtual"><scope>dicomhero::ModalityVOILUT</scope><name>runTransform</name></member>
      <member refid="classdicomhero_1_1_transform_1ac2b188c1e4b9e778a049ac8b7589f9fe" prot="public" virt="non-virtual"><scope>dicomhero::ModalityVOILUT</scope><name>Transform</name></member>
      <member refid="classdicomhero_1_1_transform_1a548cf8aa88ffe9a9c557ecc9df126e8b" prot="protected" virt="non-virtual"><scope>dicomhero::ModalityVOILUT</scope><name>Transform</name></member>
      <member refid="classdicomhero_1_1_modality_v_o_i_l_u_t_1a266603de8173ed4fb0b7c39debe21c23" prot="public" virt="virtual"><scope>dicomhero::ModalityVOILUT</scope><name>~ModalityVOILUT</name></member>
      <member refid="classdicomhero_1_1_transform_1a8f43cf7cfef1f594dd35e0c4b1f1d8e0" prot="public" virt="virtual"><scope>dicomhero::ModalityVOILUT</scope><name>~Transform</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
