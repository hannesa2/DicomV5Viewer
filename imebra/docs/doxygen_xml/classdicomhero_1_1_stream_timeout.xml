<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classdicomhero_1_1_stream_timeout" kind="class" language="C++" prot="public">
    <compoundname>dicomhero::StreamTimeout</compoundname>
    <includes local="no">baseStreamInput.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdicomhero_1_1_stream_timeout_1a6faa487c3cfdfa027a9df1652164e5b3" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; implementation::streamTimeout &gt;</type>
        <definition>std::shared_ptr&lt;implementation::streamTimeout&gt; dicomhero::StreamTimeout::m_pStreamTimeout</definition>
        <argsstring></argsstring>
        <name>m_pStreamTimeout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/baseStreamInput.h" line="123" column="21" bodyfile="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/baseStreamInput.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdicomhero_1_1_stream_timeout_1a6375ef85aecb2a1f5235efe29b8cef68" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>dicomhero::StreamTimeout::StreamTimeout</definition>
        <argsstring>(BaseStreamInput &amp;stream, std::uint32_t timeoutSeconds)</argsstring>
        <name>StreamTimeout</name>
        <param>
          <type><ref refid="classdicomhero_1_1_base_stream_input" kindref="compound">BaseStreamInput</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>std::uint32_t</type>
          <declname>timeoutSeconds</declname>
        </param>
        <briefdescription>
<para>Constructor. Starts a separate thread that closes the stream in the parameter if this class destructor is not called before the timeout expires. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>stream that must be closed when the timeout expires </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeoutSeconds</parametername>
</parameternamelist>
<parameterdescription>
<para>timeout in seconds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/baseStreamInput.h" line="100" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_stream_timeout_1adabfcd561adc1037ff513a9d0dbf2d26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dicomhero::StreamTimeout::StreamTimeout</definition>
        <argsstring>(const StreamTimeout &amp;source)</argsstring>
        <name>StreamTimeout</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_stream_timeout" kindref="compound">StreamTimeout</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>source stream timeout </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/baseStreamInput.h" line="108" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_stream_timeout_1a3e00cbbc10ccad968155851ba956709d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classdicomhero_1_1_stream_timeout" kindref="compound">StreamTimeout</ref> &amp;</type>
        <definition>StreamTimeout&amp; dicomhero::StreamTimeout::operator=</definition>
        <argsstring>(const StreamTimeout &amp;source)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_stream_timeout" kindref="compound">StreamTimeout</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/baseStreamInput.h" line="110" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classdicomhero_1_1_stream_timeout_1a1eddc643ca997f6244ccfc72ab4b0bf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dicomhero::StreamTimeout::~StreamTimeout</definition>
        <argsstring>()</argsstring>
        <name>~StreamTimeout</name>
        <briefdescription>
<para>Destructor. If the timeout has not yet expired then terminates the thread that closes the stream, preventing it from closing the stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/baseStreamInput.h" line="118" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classdicomhero_1_1_stream_timeout_1a99f64a228536fac3337daaa230553081" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::shared_ptr&lt; implementation::streamTimeout &gt; &amp;</type>
        <definition>const std::shared_ptr&lt;implementation::streamTimeout&gt;&amp; getStreamTimeoutImplementation</definition>
        <argsstring>(const StreamTimeout &amp;streamTimeout)</argsstring>
        <name>getStreamTimeoutImplementation</name>
        <param>
          <type>const <ref refid="classdicomhero_1_1_stream_timeout" kindref="compound">StreamTimeout</ref> &amp;</type>
          <declname>streamTimeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/baseStreamInput.h" line="122" column="34"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Triggers a timeout on a selected stream if the class is not deallocated within the specified amount of time. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/baseStreamInput.h" line="87" column="1" bodyfile="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/baseStreamInput.h" bodystart="88" bodyend="125"/>
    <listofallmembers>
      <member refid="classdicomhero_1_1_stream_timeout_1a99f64a228536fac3337daaa230553081" prot="private" virt="non-virtual"><scope>dicomhero::StreamTimeout</scope><name>getStreamTimeoutImplementation</name></member>
      <member refid="classdicomhero_1_1_stream_timeout_1a6faa487c3cfdfa027a9df1652164e5b3" prot="private" virt="non-virtual"><scope>dicomhero::StreamTimeout</scope><name>m_pStreamTimeout</name></member>
      <member refid="classdicomhero_1_1_stream_timeout_1a3e00cbbc10ccad968155851ba956709d" prot="public" virt="non-virtual"><scope>dicomhero::StreamTimeout</scope><name>operator=</name></member>
      <member refid="classdicomhero_1_1_stream_timeout_1a6375ef85aecb2a1f5235efe29b8cef68" prot="public" virt="non-virtual"><scope>dicomhero::StreamTimeout</scope><name>StreamTimeout</name></member>
      <member refid="classdicomhero_1_1_stream_timeout_1adabfcd561adc1037ff513a9d0dbf2d26" prot="public" virt="non-virtual"><scope>dicomhero::StreamTimeout</scope><name>StreamTimeout</name></member>
      <member refid="classdicomhero_1_1_stream_timeout_1a1eddc643ca997f6244ccfc72ab4b0bf9" prot="public" virt="non-virtual"><scope>dicomhero::StreamTimeout</scope><name>~StreamTimeout</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
