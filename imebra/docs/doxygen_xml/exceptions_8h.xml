<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="exceptions_8h" kind="file" language="C++">
    <compoundname>exceptions.h</compoundname>
    <includes local="no">stdexcept</includes>
    <includes local="no">string</includes>
    <includes refid="definitions_8h" local="yes">definitions.h</includes>
    <includedby refid="library_2include_2dicomhero6_2dicomhero_8h" local="yes">dicomhero.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>cstdint</label>
      </node>
      <node id="2">
        <label>stdexcept</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="1">
        <label>exceptions.h</label>
        <link refid="exceptions_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
      <node id="4">
        <label>definitions.h</label>
        <link refid="definitions_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classdicomhero_1_1_exceptions_manager" prot="public">dicomhero::ExceptionsManager</innerclass>
    <innerclass refid="classdicomhero_1_1_lut_error" prot="public">dicomhero::LutError</innerclass>
    <innerclass refid="classdicomhero_1_1_lut_corrupted_error" prot="public">dicomhero::LutCorruptedError</innerclass>
    <innerclass refid="classdicomhero_1_1_missing_data_element_error" prot="public">dicomhero::MissingDataElementError</innerclass>
    <innerclass refid="classdicomhero_1_1_missing_group_error" prot="public">dicomhero::MissingGroupError</innerclass>
    <innerclass refid="classdicomhero_1_1_missing_tag_error" prot="public">dicomhero::MissingTagError</innerclass>
    <innerclass refid="classdicomhero_1_1_missing_buffer_error" prot="public">dicomhero::MissingBufferError</innerclass>
    <innerclass refid="classdicomhero_1_1_missing_item_error" prot="public">dicomhero::MissingItemError</innerclass>
    <innerclass refid="classdicomhero_1_1_stream_error" prot="public">dicomhero::StreamError</innerclass>
    <innerclass refid="classdicomhero_1_1_stream_open_error" prot="public">dicomhero::StreamOpenError</innerclass>
    <innerclass refid="classdicomhero_1_1_stream_read_error" prot="public">dicomhero::StreamReadError</innerclass>
    <innerclass refid="classdicomhero_1_1_stream_write_error" prot="public">dicomhero::StreamWriteError</innerclass>
    <innerclass refid="classdicomhero_1_1_t_c_p_connection_refused" prot="public">dicomhero::TCPConnectionRefused</innerclass>
    <innerclass refid="classdicomhero_1_1_t_c_p_address_already_in_use" prot="public">dicomhero::TCPAddressAlreadyInUse</innerclass>
    <innerclass refid="classdicomhero_1_1_permission_denied_error" prot="public">dicomhero::PermissionDeniedError</innerclass>
    <innerclass refid="classdicomhero_1_1_address_error" prot="public">dicomhero::AddressError</innerclass>
    <innerclass refid="classdicomhero_1_1_address_try_again_error" prot="public">dicomhero::AddressTryAgainError</innerclass>
    <innerclass refid="classdicomhero_1_1_address_no_name_error" prot="public">dicomhero::AddressNoNameError</innerclass>
    <innerclass refid="classdicomhero_1_1_address_service_not_supported_error" prot="public">dicomhero::AddressServiceNotSupportedError</innerclass>
    <innerclass refid="classdicomhero_1_1_dictionary_error" prot="public">dicomhero::DictionaryError</innerclass>
    <innerclass refid="classdicomhero_1_1_dictionary_unknown_tag_error" prot="public">dicomhero::DictionaryUnknownTagError</innerclass>
    <innerclass refid="classdicomhero_1_1_dictionary_unknown_data_type_error" prot="public">dicomhero::DictionaryUnknownDataTypeError</innerclass>
    <innerclass refid="classdicomhero_1_1_charset_conversion_error" prot="public">dicomhero::CharsetConversionError</innerclass>
    <innerclass refid="classdicomhero_1_1_charset_conversion_no_table_error" prot="public">dicomhero::CharsetConversionNoTableError</innerclass>
    <innerclass refid="classdicomhero_1_1_charset_conversion_no_supported_table_error" prot="public">dicomhero::CharsetConversionNoSupportedTableError</innerclass>
    <innerclass refid="classdicomhero_1_1_charset_conversion_cannot_convert" prot="public">dicomhero::CharsetConversionCannotConvert</innerclass>
    <innerclass refid="classdicomhero_1_1_codec_error" prot="public">dicomhero::CodecError</innerclass>
    <innerclass refid="classdicomhero_1_1_codec_wrong_format_error" prot="public">dicomhero::CodecWrongFormatError</innerclass>
    <innerclass refid="classdicomhero_1_1_codec_corrupted_file_error" prot="public">dicomhero::CodecCorruptedFileError</innerclass>
    <innerclass refid="classdicomhero_1_1_codec_wrong_transfer_syntax_error" prot="public">dicomhero::CodecWrongTransferSyntaxError</innerclass>
    <innerclass refid="classdicomhero_1_1_codec_image_too_big_error" prot="public">dicomhero::CodecImageTooBigError</innerclass>
    <innerclass refid="classdicomhero_1_1_invalid_sequence_item_error" prot="public">dicomhero::InvalidSequenceItemError</innerclass>
    <innerclass refid="classdicomhero_1_1_data_handler_error" prot="public">dicomhero::DataHandlerError</innerclass>
    <innerclass refid="classdicomhero_1_1_data_handler_conversion_error" prot="public">dicomhero::DataHandlerConversionError</innerclass>
    <innerclass refid="classdicomhero_1_1_data_handler_corrupted_buffer_error" prot="public">dicomhero::DataHandlerCorruptedBufferError</innerclass>
    <innerclass refid="classdicomhero_1_1_data_handler_invalid_data_error" prot="public">dicomhero::DataHandlerInvalidDataError</innerclass>
    <innerclass refid="classdicomhero_1_1_data_set_error" prot="public">dicomhero::DataSetError</innerclass>
    <innerclass refid="classdicomhero_1_1_data_set_different_format_error" prot="public">dicomhero::DataSetDifferentFormatError</innerclass>
    <innerclass refid="classdicomhero_1_1_data_set_unknown_transfer_syntax_error" prot="public">dicomhero::DataSetUnknownTransferSyntaxError</innerclass>
    <innerclass refid="classdicomhero_1_1_data_set_wrong_frame_error" prot="public">dicomhero::DataSetWrongFrameError</innerclass>
    <innerclass refid="classdicomhero_1_1_data_set_image_doesnt_exist_error" prot="public">dicomhero::DataSetImageDoesntExistError</innerclass>
    <innerclass refid="classdicomhero_1_1_data_set_image_palette_color_is_read_only" prot="public">dicomhero::DataSetImagePaletteColorIsReadOnly</innerclass>
    <innerclass refid="classdicomhero_1_1_data_set_corrupted_offset_table_error" prot="public">dicomhero::DataSetCorruptedOffsetTableError</innerclass>
    <innerclass refid="classdicomhero_1_1_dicom_dir_error" prot="public">dicomhero::DicomDirError</innerclass>
    <innerclass refid="classdicomhero_1_1_dicom_dir_circular_reference_error" prot="public">dicomhero::DicomDirCircularReferenceError</innerclass>
    <innerclass refid="classdicomhero_1_1_dicom_dir_no_entry_error" prot="public">dicomhero::DicomDirNoEntryError</innerclass>
    <innerclass refid="classdicomhero_1_1_image_error" prot="public">dicomhero::ImageError</innerclass>
    <innerclass refid="classdicomhero_1_1_image_unknown_depth_error" prot="public">dicomhero::ImageUnknownDepthError</innerclass>
    <innerclass refid="classdicomhero_1_1_image_unknown_color_space_error" prot="public">dicomhero::ImageUnknownColorSpaceError</innerclass>
    <innerclass refid="classdicomhero_1_1_image_invalid_size_error" prot="public">dicomhero::ImageInvalidSizeError</innerclass>
    <innerclass refid="classdicomhero_1_1_transform_error" prot="public">dicomhero::TransformError</innerclass>
    <innerclass refid="classdicomhero_1_1_transform_invalid_area_error" prot="public">dicomhero::TransformInvalidAreaError</innerclass>
    <innerclass refid="classdicomhero_1_1_transform_different_high_bit_error" prot="public">dicomhero::TransformDifferentHighBitError</innerclass>
    <innerclass refid="classdicomhero_1_1_color_transform_error" prot="public">dicomhero::ColorTransformError</innerclass>
    <innerclass refid="classdicomhero_1_1_color_transform_wrong_color_space_error" prot="public">dicomhero::ColorTransformWrongColorSpaceError</innerclass>
    <innerclass refid="classdicomhero_1_1_color_transforms_factory_error" prot="public">dicomhero::ColorTransformsFactoryError</innerclass>
    <innerclass refid="classdicomhero_1_1_color_transforms_factory_no_transform_error" prot="public">dicomhero::ColorTransformsFactoryNoTransformError</innerclass>
    <innerclass refid="classdicomhero_1_1_transform_different_color_spaces_error" prot="public">dicomhero::TransformDifferentColorSpacesError</innerclass>
    <innerclass refid="classdicomhero_1_1_stream_e_o_f_error" prot="public">dicomhero::StreamEOFError</innerclass>
    <innerclass refid="classdicomhero_1_1_stream_closed_error" prot="public">dicomhero::StreamClosedError</innerclass>
    <innerclass refid="classdicomhero_1_1_modality_v_o_i_l_u_t_error" prot="public">dicomhero::ModalityVOILUTError</innerclass>
    <innerclass refid="classdicomhero_1_1_dicom_codec_error" prot="public">dicomhero::DicomCodecError</innerclass>
    <innerclass refid="classdicomhero_1_1_dicom_codec_depth_limit_reached_error" prot="public">dicomhero::DicomCodecDepthLimitReachedError</innerclass>
    <innerclass refid="classdicomhero_1_1_jpeg_codec_error" prot="public">dicomhero::JpegCodecError</innerclass>
    <innerclass refid="classdicomhero_1_1_jpeg_codec_cannot_handle_syntax_error" prot="public">dicomhero::JpegCodecCannotHandleSyntaxError</innerclass>
    <innerclass refid="classdicomhero_1_1_dicomhero_bad_alloc" prot="public">dicomhero::DicomheroBadAlloc</innerclass>
    <innerclass refid="classdicomhero_1_1_memory_error" prot="public">dicomhero::MemoryError</innerclass>
    <innerclass refid="classdicomhero_1_1_memory_size_error" prot="public">dicomhero::MemorySizeError</innerclass>
    <innerclass refid="classdicomhero_1_1_acse_error" prot="public">dicomhero::AcseError</innerclass>
    <innerclass refid="classdicomhero_1_1_acse_corrupted_message_error" prot="public">dicomhero::AcseCorruptedMessageError</innerclass>
    <innerclass refid="classdicomhero_1_1_acse_no_transfer_syntax_error" prot="public">dicomhero::AcseNoTransferSyntaxError</innerclass>
    <innerclass refid="classdicomhero_1_1_acse_presentation_context_not_requested_error" prot="public">dicomhero::AcsePresentationContextNotRequestedError</innerclass>
    <innerclass refid="classdicomhero_1_1_acse_wrong_role_error" prot="public">dicomhero::AcseWrongRoleError</innerclass>
    <innerclass refid="classdicomhero_1_1_acse_wrong_id_error" prot="public">dicomhero::AcseWrongIdError</innerclass>
    <innerclass refid="classdicomhero_1_1_acse_wrong_response_id_error" prot="public">dicomhero::AcseWrongResponseIdError</innerclass>
    <innerclass refid="classdicomhero_1_1_acse_wrong_command_id_error" prot="public">dicomhero::AcseWrongCommandIdError</innerclass>
    <innerclass refid="classdicomhero_1_1_acse_rejected_association_error" prot="public">dicomhero::AcseRejectedAssociationError</innerclass>
    <innerclass refid="classdicomhero_1_1_acse_s_c_u_no_reason_given_error" prot="public">dicomhero::AcseSCUNoReasonGivenError</innerclass>
    <innerclass refid="classdicomhero_1_1_acse_s_c_u_application_context_name_not_supported_error" prot="public">dicomhero::AcseSCUApplicationContextNameNotSupportedError</innerclass>
    <innerclass refid="classdicomhero_1_1_acse_s_c_u_calling_a_e_t_not_recognized_error" prot="public">dicomhero::AcseSCUCallingAETNotRecognizedError</innerclass>
    <innerclass refid="classdicomhero_1_1_acse_s_c_u_called_a_e_t_not_recognized_error" prot="public">dicomhero::AcseSCUCalledAETNotRecognizedError</innerclass>
    <innerclass refid="classdicomhero_1_1_acse_s_c_p_no_reason_given_error" prot="public">dicomhero::AcseSCPNoReasonGivenError</innerclass>
    <innerclass refid="classdicomhero_1_1_acse_s_c_p_acse_protocol_version_not_supported_error" prot="public">dicomhero::AcseSCPAcseProtocolVersionNotSupportedError</innerclass>
    <innerclass refid="classdicomhero_1_1_acse_s_c_p_presentation_reserved_error" prot="public">dicomhero::AcseSCPPresentationReservedError</innerclass>
    <innerclass refid="classdicomhero_1_1_acse_s_c_p_presentation_temporary_congestion_error" prot="public">dicomhero::AcseSCPPresentationTemporaryCongestionError</innerclass>
    <innerclass refid="classdicomhero_1_1_acse_s_c_p_presentation_local_limit_exceded_error" prot="public">dicomhero::AcseSCPPresentationLocalLimitExcededError</innerclass>
    <innerclass refid="classdicomhero_1_1_acse_too_many_operations_performed_error" prot="public">dicomhero::AcseTooManyOperationsPerformedError</innerclass>
    <innerclass refid="classdicomhero_1_1_acse_too_many_operations_invoked_error" prot="public">dicomhero::AcseTooManyOperationsInvokedError</innerclass>
    <innerclass refid="classdicomhero_1_1_acse_no_payload_error" prot="public">dicomhero::AcseNoPayloadError</innerclass>
    <innerclass refid="classdicomhero_1_1_dimse_error" prot="public">dicomhero::DimseError</innerclass>
    <innerclass refid="classdicomhero_1_1_dimse_invalid_command" prot="public">dicomhero::DimseInvalidCommand</innerclass>
    <innerclass refid="classdicomhero_1_1_u_i_d_generator_error" prot="public">dicomhero::UIDGeneratorError</innerclass>
    <innerclass refid="classdicomhero_1_1_non_registered_u_i_d_generator" prot="public">dicomhero::NonRegisteredUIDGenerator</innerclass>
    <innernamespace refid="namespacedicomhero">dicomhero</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">Copyright<sp/>2005<sp/>-<sp/>2021<sp/>by<sp/>Paolo<sp/>Brandoli/Binarno<sp/>s.p.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">DICOMHero/Imebra<sp/>is<sp/>available<sp/>for<sp/>free<sp/>under<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment">The<sp/>full<sp/>text<sp/>of<sp/>the<sp/>license<sp/>is<sp/>available<sp/>in<sp/>the<sp/>file<sp/>license.rst</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>in<sp/>the<sp/>project<sp/>root<sp/>folder.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">If<sp/>you<sp/>do<sp/>not<sp/>want<sp/>to<sp/>be<sp/>bound<sp/>by<sp/>the<sp/>GPL<sp/>terms<sp/>(such<sp/>as<sp/>the<sp/>requirement</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>that<sp/>your<sp/>application<sp/>must<sp/>also<sp/>be<sp/>GPL),<sp/>you<sp/>may<sp/>purchase<sp/>a<sp/>commercial</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>license<sp/>for<sp/>DICOMHero/Imebra<sp/>from<sp/>the<sp/>DICOMHero’s<sp/>website<sp/>(https://dicomhero.com).</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(imebraExceptions__INCLUDED_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>imebraExceptions__INCLUDED_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="definitions_8h" kindref="compound">definitions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">dicomhero</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classdicomhero_1_1_exceptions_manager" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_exceptions_manager" kindref="compound">ExceptionsManager</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>getExceptionTrace()<sp/>noexcept;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classdicomhero_1_1_lut_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_lut_error" kindref="compound">LutError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::runtime_error</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_lut_error" kindref="compound">LutError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_lut_error" kindref="compound">LutError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_lut_error" kindref="compound">LutError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_lut_error" kindref="compound">LutError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_lut_error" kindref="compound">LutError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_lut_error" kindref="compound">LutError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classdicomhero_1_1_lut_corrupted_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_lut_corrupted_error" kindref="compound">LutCorruptedError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_lut_error" kindref="compound">LutError</ref></highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_lut_corrupted_error" kindref="compound">LutCorruptedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_lut_corrupted_error" kindref="compound">LutCorruptedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_lut_corrupted_error" kindref="compound">LutCorruptedError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_lut_corrupted_error" kindref="compound">LutCorruptedError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_lut_corrupted_error" kindref="compound">LutCorruptedError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_lut_corrupted_error" kindref="compound">LutCorruptedError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classdicomhero_1_1_missing_data_element_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_missing_data_element_error" kindref="compound">MissingDataElementError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::runtime_error</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_missing_data_element_error" kindref="compound">MissingDataElementError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_missing_data_element_error" kindref="compound">MissingDataElementError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_missing_data_element_error" kindref="compound">MissingDataElementError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_missing_data_element_error" kindref="compound">MissingDataElementError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_missing_data_element_error" kindref="compound">MissingDataElementError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_missing_data_element_error" kindref="compound">MissingDataElementError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="classdicomhero_1_1_missing_group_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_missing_data_element_error" kindref="compound">MissingDataElementError</ref></highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_missing_group_error" kindref="compound">MissingGroupError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classdicomhero_1_1_missing_tag_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_missing_data_element_error" kindref="compound">MissingDataElementError</ref></highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_missing_tag_error" kindref="compound">MissingTagError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="classdicomhero_1_1_missing_buffer_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_missing_data_element_error" kindref="compound">MissingDataElementError</ref></highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_missing_buffer_error" kindref="compound">MissingBufferError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">};</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="classdicomhero_1_1_missing_item_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_missing_data_element_error" kindref="compound">MissingDataElementError</ref></highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_missing_item_error" kindref="compound">MissingItemError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">};</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="classdicomhero_1_1_stream_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_stream_error" kindref="compound">StreamError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::runtime_error</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_stream_error" kindref="compound">StreamError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_stream_error" kindref="compound">StreamError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_stream_error" kindref="compound">StreamError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_stream_error" kindref="compound">StreamError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_stream_error" kindref="compound">StreamError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_stream_error" kindref="compound">StreamError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">};</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="classdicomhero_1_1_stream_open_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_stream_open_error" kindref="compound">StreamOpenError</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_stream_error" kindref="compound">StreamError</ref></highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_stream_open_error" kindref="compound">StreamOpenError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_stream_open_error" kindref="compound">StreamOpenError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_stream_open_error" kindref="compound">StreamOpenError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_stream_open_error" kindref="compound">StreamOpenError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_stream_open_error" kindref="compound">StreamOpenError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_stream_open_error" kindref="compound">StreamOpenError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="238"><highlight class="normal">};</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="classdicomhero_1_1_stream_read_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_stream_read_error" kindref="compound">StreamReadError</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_stream_error" kindref="compound">StreamError</ref></highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_stream_read_error" kindref="compound">StreamReadError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_stream_read_error" kindref="compound">StreamReadError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_stream_read_error" kindref="compound">StreamReadError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_stream_read_error" kindref="compound">StreamReadError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_stream_read_error" kindref="compound">StreamReadError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_stream_read_error" kindref="compound">StreamReadError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">};</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="classdicomhero_1_1_stream_write_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_stream_write_error" kindref="compound">StreamWriteError</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_stream_error" kindref="compound">StreamError</ref></highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_stream_write_error" kindref="compound">StreamWriteError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_stream_write_error" kindref="compound">StreamWriteError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_stream_write_error" kindref="compound">StreamWriteError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_stream_write_error" kindref="compound">StreamWriteError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_stream_write_error" kindref="compound">StreamWriteError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_stream_write_error" kindref="compound">StreamWriteError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="282"><highlight class="normal">};</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="classdicomhero_1_1_t_c_p_connection_refused" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_t_c_p_connection_refused" kindref="compound">TCPConnectionRefused</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_stream_open_error" kindref="compound">StreamOpenError</ref></highlight></codeline>
<codeline lineno="290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_t_c_p_connection_refused" kindref="compound">TCPConnectionRefused</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_t_c_p_connection_refused" kindref="compound">TCPConnectionRefused</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_t_c_p_connection_refused" kindref="compound">TCPConnectionRefused</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_t_c_p_connection_refused" kindref="compound">TCPConnectionRefused</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_t_c_p_connection_refused" kindref="compound">TCPConnectionRefused</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_t_c_p_connection_refused" kindref="compound">TCPConnectionRefused</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="299"><highlight class="normal">};</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="classdicomhero_1_1_t_c_p_address_already_in_use" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_t_c_p_address_already_in_use" kindref="compound">TCPAddressAlreadyInUse</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_stream_open_error" kindref="compound">StreamOpenError</ref></highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_t_c_p_address_already_in_use" kindref="compound">TCPAddressAlreadyInUse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_t_c_p_address_already_in_use" kindref="compound">TCPAddressAlreadyInUse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_t_c_p_address_already_in_use" kindref="compound">TCPAddressAlreadyInUse</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_t_c_p_address_already_in_use" kindref="compound">TCPAddressAlreadyInUse</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_t_c_p_address_already_in_use" kindref="compound">TCPAddressAlreadyInUse</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_t_c_p_address_already_in_use" kindref="compound">TCPAddressAlreadyInUse</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="316"><highlight class="normal">};</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="classdicomhero_1_1_permission_denied_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_permission_denied_error" kindref="compound">PermissionDeniedError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::runtime_error</highlight></codeline>
<codeline lineno="325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_permission_denied_error" kindref="compound">PermissionDeniedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_permission_denied_error" kindref="compound">PermissionDeniedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_permission_denied_error" kindref="compound">PermissionDeniedError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_permission_denied_error" kindref="compound">PermissionDeniedError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_permission_denied_error" kindref="compound">PermissionDeniedError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_permission_denied_error" kindref="compound">PermissionDeniedError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="334"><highlight class="normal">};</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="classdicomhero_1_1_address_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_address_error" kindref="compound">AddressError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::runtime_error</highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_address_error" kindref="compound">AddressError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_address_error" kindref="compound">AddressError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_address_error" kindref="compound">AddressError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_address_error" kindref="compound">AddressError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_address_error" kindref="compound">AddressError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_address_error" kindref="compound">AddressError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="356"><highlight class="normal">};</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="classdicomhero_1_1_address_try_again_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_address_try_again_error" kindref="compound">AddressTryAgainError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_address_error" kindref="compound">AddressError</ref></highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_address_try_again_error" kindref="compound">AddressTryAgainError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_address_try_again_error" kindref="compound">AddressTryAgainError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_address_try_again_error" kindref="compound">AddressTryAgainError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_address_try_again_error" kindref="compound">AddressTryAgainError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_address_try_again_error" kindref="compound">AddressTryAgainError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_address_try_again_error" kindref="compound">AddressTryAgainError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="379"><highlight class="normal">};</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="classdicomhero_1_1_address_no_name_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_address_no_name_error" kindref="compound">AddressNoNameError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_address_error" kindref="compound">AddressError</ref></highlight></codeline>
<codeline lineno="386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_address_no_name_error" kindref="compound">AddressNoNameError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_address_no_name_error" kindref="compound">AddressNoNameError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_address_no_name_error" kindref="compound">AddressNoNameError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_address_no_name_error" kindref="compound">AddressNoNameError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_address_no_name_error" kindref="compound">AddressNoNameError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_address_no_name_error" kindref="compound">AddressNoNameError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="400"><highlight class="normal">};</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="classdicomhero_1_1_address_service_not_supported_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_address_service_not_supported_error" kindref="compound">AddressServiceNotSupportedError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_address_error" kindref="compound">AddressError</ref></highlight></codeline>
<codeline lineno="408"><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_address_service_not_supported_error" kindref="compound">AddressServiceNotSupportedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_address_service_not_supported_error" kindref="compound">AddressServiceNotSupportedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_address_service_not_supported_error" kindref="compound">AddressServiceNotSupportedError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_address_service_not_supported_error" kindref="compound">AddressServiceNotSupportedError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_address_service_not_supported_error" kindref="compound">AddressServiceNotSupportedError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_address_service_not_supported_error" kindref="compound">AddressServiceNotSupportedError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="422"><highlight class="normal">};</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="classdicomhero_1_1_dictionary_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_dictionary_error" kindref="compound">DictionaryError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::runtime_error</highlight></codeline>
<codeline lineno="429"><highlight class="normal">{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dictionary_error" kindref="compound">DictionaryError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_dictionary_error" kindref="compound">DictionaryError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dictionary_error" kindref="compound">DictionaryError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_dictionary_error" kindref="compound">DictionaryError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dictionary_error" kindref="compound">DictionaryError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_dictionary_error" kindref="compound">DictionaryError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="443"><highlight class="normal">};</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="450" refid="classdicomhero_1_1_dictionary_unknown_tag_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_dictionary_unknown_tag_error" kindref="compound">DictionaryUnknownTagError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dictionary_error" kindref="compound">DictionaryError</ref></highlight></codeline>
<codeline lineno="451"><highlight class="normal">{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dictionary_unknown_tag_error" kindref="compound">DictionaryUnknownTagError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_dictionary_unknown_tag_error" kindref="compound">DictionaryUnknownTagError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dictionary_unknown_tag_error" kindref="compound">DictionaryUnknownTagError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_dictionary_unknown_tag_error" kindref="compound">DictionaryUnknownTagError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dictionary_unknown_tag_error" kindref="compound">DictionaryUnknownTagError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_dictionary_unknown_tag_error" kindref="compound">DictionaryUnknownTagError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="465"><highlight class="normal">};</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="473" refid="classdicomhero_1_1_dictionary_unknown_data_type_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_dictionary_unknown_data_type_error" kindref="compound">DictionaryUnknownDataTypeError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dictionary_error" kindref="compound">DictionaryError</ref></highlight></codeline>
<codeline lineno="474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dictionary_unknown_data_type_error" kindref="compound">DictionaryUnknownDataTypeError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_dictionary_unknown_data_type_error" kindref="compound">DictionaryUnknownDataTypeError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dictionary_unknown_data_type_error" kindref="compound">DictionaryUnknownDataTypeError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_dictionary_unknown_data_type_error" kindref="compound">DictionaryUnknownDataTypeError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dictionary_unknown_data_type_error" kindref="compound">DictionaryUnknownDataTypeError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_dictionary_unknown_data_type_error" kindref="compound">DictionaryUnknownDataTypeError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="488"><highlight class="normal">};</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="494" refid="classdicomhero_1_1_charset_conversion_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_charset_conversion_error" kindref="compound">CharsetConversionError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::runtime_error</highlight></codeline>
<codeline lineno="495"><highlight class="normal">{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_charset_conversion_error" kindref="compound">CharsetConversionError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_charset_conversion_error" kindref="compound">CharsetConversionError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_charset_conversion_error" kindref="compound">CharsetConversionError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_charset_conversion_error" kindref="compound">CharsetConversionError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_charset_conversion_error" kindref="compound">CharsetConversionError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_charset_conversion_error" kindref="compound">CharsetConversionError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="509"><highlight class="normal">};</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="516" refid="classdicomhero_1_1_charset_conversion_no_table_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_charset_conversion_no_table_error" kindref="compound">CharsetConversionNoTableError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_charset_conversion_error" kindref="compound">CharsetConversionError</ref></highlight></codeline>
<codeline lineno="517"><highlight class="normal">{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_charset_conversion_no_table_error" kindref="compound">CharsetConversionNoTableError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_charset_conversion_no_table_error" kindref="compound">CharsetConversionNoTableError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_charset_conversion_no_table_error" kindref="compound">CharsetConversionNoTableError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_charset_conversion_no_table_error" kindref="compound">CharsetConversionNoTableError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_charset_conversion_no_table_error" kindref="compound">CharsetConversionNoTableError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_charset_conversion_no_table_error" kindref="compound">CharsetConversionNoTableError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="531"><highlight class="normal">};</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="538" refid="classdicomhero_1_1_charset_conversion_no_supported_table_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_charset_conversion_no_supported_table_error" kindref="compound">CharsetConversionNoSupportedTableError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_charset_conversion_error" kindref="compound">CharsetConversionError</ref></highlight></codeline>
<codeline lineno="539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_charset_conversion_no_supported_table_error" kindref="compound">CharsetConversionNoSupportedTableError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_charset_conversion_no_supported_table_error" kindref="compound">CharsetConversionNoSupportedTableError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_charset_conversion_no_supported_table_error" kindref="compound">CharsetConversionNoSupportedTableError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_charset_conversion_no_supported_table_error" kindref="compound">CharsetConversionNoSupportedTableError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_charset_conversion_no_supported_table_error" kindref="compound">CharsetConversionNoSupportedTableError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_charset_conversion_no_supported_table_error" kindref="compound">CharsetConversionNoSupportedTableError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="553"><highlight class="normal">};</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="560" refid="classdicomhero_1_1_charset_conversion_cannot_convert" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_charset_conversion_cannot_convert" kindref="compound">CharsetConversionCannotConvert</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_charset_conversion_error" kindref="compound">CharsetConversionError</ref></highlight></codeline>
<codeline lineno="561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_charset_conversion_cannot_convert" kindref="compound">CharsetConversionCannotConvert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_charset_conversion_cannot_convert" kindref="compound">CharsetConversionCannotConvert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_charset_conversion_cannot_convert" kindref="compound">CharsetConversionCannotConvert</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_charset_conversion_cannot_convert" kindref="compound">CharsetConversionCannotConvert</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_charset_conversion_cannot_convert" kindref="compound">CharsetConversionCannotConvert</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_charset_conversion_cannot_convert" kindref="compound">CharsetConversionCannotConvert</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="575"><highlight class="normal">};</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="581" refid="classdicomhero_1_1_codec_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_codec_error" kindref="compound">CodecError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::runtime_error</highlight></codeline>
<codeline lineno="582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_codec_error" kindref="compound">CodecError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_codec_error" kindref="compound">CodecError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_codec_error" kindref="compound">CodecError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_codec_error" kindref="compound">CodecError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_codec_error" kindref="compound">CodecError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_codec_error" kindref="compound">CodecError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="596"><highlight class="normal">};</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="603" refid="classdicomhero_1_1_codec_wrong_format_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_codec_wrong_format_error" kindref="compound">CodecWrongFormatError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_codec_error" kindref="compound">CodecError</ref></highlight></codeline>
<codeline lineno="604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_codec_wrong_format_error" kindref="compound">CodecWrongFormatError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_codec_wrong_format_error" kindref="compound">CodecWrongFormatError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_codec_wrong_format_error" kindref="compound">CodecWrongFormatError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_codec_wrong_format_error" kindref="compound">CodecWrongFormatError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_codec_wrong_format_error" kindref="compound">CodecWrongFormatError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_codec_wrong_format_error" kindref="compound">CodecWrongFormatError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="618"><highlight class="normal">};</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="624" refid="classdicomhero_1_1_codec_corrupted_file_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_codec_corrupted_file_error" kindref="compound">CodecCorruptedFileError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_codec_error" kindref="compound">CodecError</ref></highlight></codeline>
<codeline lineno="625"><highlight class="normal">{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_codec_corrupted_file_error" kindref="compound">CodecCorruptedFileError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_codec_corrupted_file_error" kindref="compound">CodecCorruptedFileError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_codec_corrupted_file_error" kindref="compound">CodecCorruptedFileError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_codec_corrupted_file_error" kindref="compound">CodecCorruptedFileError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_codec_corrupted_file_error" kindref="compound">CodecCorruptedFileError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_codec_corrupted_file_error" kindref="compound">CodecCorruptedFileError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="639"><highlight class="normal">};</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="646" refid="classdicomhero_1_1_codec_wrong_transfer_syntax_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_codec_wrong_transfer_syntax_error" kindref="compound">CodecWrongTransferSyntaxError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_codec_error" kindref="compound">CodecError</ref></highlight></codeline>
<codeline lineno="647"><highlight class="normal">{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_codec_wrong_transfer_syntax_error" kindref="compound">CodecWrongTransferSyntaxError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_codec_wrong_transfer_syntax_error" kindref="compound">CodecWrongTransferSyntaxError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_codec_wrong_transfer_syntax_error" kindref="compound">CodecWrongTransferSyntaxError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_codec_wrong_transfer_syntax_error" kindref="compound">CodecWrongTransferSyntaxError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_codec_wrong_transfer_syntax_error" kindref="compound">CodecWrongTransferSyntaxError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_codec_wrong_transfer_syntax_error" kindref="compound">CodecWrongTransferSyntaxError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="661"><highlight class="normal">};</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="671" refid="classdicomhero_1_1_codec_image_too_big_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_codec_image_too_big_error" kindref="compound">CodecImageTooBigError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_codec_error" kindref="compound">CodecError</ref></highlight></codeline>
<codeline lineno="672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_codec_image_too_big_error" kindref="compound">CodecImageTooBigError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_codec_image_too_big_error" kindref="compound">CodecImageTooBigError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_codec_image_too_big_error" kindref="compound">CodecImageTooBigError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_codec_image_too_big_error" kindref="compound">CodecImageTooBigError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_codec_image_too_big_error" kindref="compound">CodecImageTooBigError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_codec_image_too_big_error" kindref="compound">CodecImageTooBigError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="686"><highlight class="normal">};</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="694" refid="classdicomhero_1_1_invalid_sequence_item_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_invalid_sequence_item_error" kindref="compound">InvalidSequenceItemError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_codec_error" kindref="compound">CodecError</ref></highlight></codeline>
<codeline lineno="695"><highlight class="normal">{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_invalid_sequence_item_error" kindref="compound">InvalidSequenceItemError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_invalid_sequence_item_error" kindref="compound">InvalidSequenceItemError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_invalid_sequence_item_error" kindref="compound">InvalidSequenceItemError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_invalid_sequence_item_error" kindref="compound">InvalidSequenceItemError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_invalid_sequence_item_error" kindref="compound">InvalidSequenceItemError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_invalid_sequence_item_error" kindref="compound">InvalidSequenceItemError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="709"><highlight class="normal">};</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="715" refid="classdicomhero_1_1_data_handler_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_data_handler_error" kindref="compound">DataHandlerError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::runtime_error</highlight></codeline>
<codeline lineno="716"><highlight class="normal">{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_handler_error" kindref="compound">DataHandlerError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_data_handler_error" kindref="compound">DataHandlerError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_handler_error" kindref="compound">DataHandlerError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_data_handler_error" kindref="compound">DataHandlerError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_handler_error" kindref="compound">DataHandlerError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_data_handler_error" kindref="compound">DataHandlerError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="730"><highlight class="normal">};</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="737" refid="classdicomhero_1_1_data_handler_conversion_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_handler_error" kindref="compound">DataHandlerError</ref></highlight></codeline>
<codeline lineno="738"><highlight class="normal">{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_data_handler_conversion_error" kindref="compound">DataHandlerConversionError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="752"><highlight class="normal">};</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="758" refid="classdicomhero_1_1_data_handler_corrupted_buffer_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_data_handler_corrupted_buffer_error" kindref="compound">DataHandlerCorruptedBufferError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_handler_error" kindref="compound">DataHandlerError</ref></highlight></codeline>
<codeline lineno="759"><highlight class="normal">{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_handler_corrupted_buffer_error" kindref="compound">DataHandlerCorruptedBufferError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_data_handler_corrupted_buffer_error" kindref="compound">DataHandlerCorruptedBufferError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_handler_corrupted_buffer_error" kindref="compound">DataHandlerCorruptedBufferError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_data_handler_corrupted_buffer_error" kindref="compound">DataHandlerCorruptedBufferError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_handler_corrupted_buffer_error" kindref="compound">DataHandlerCorruptedBufferError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_data_handler_corrupted_buffer_error" kindref="compound">DataHandlerCorruptedBufferError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="773"><highlight class="normal">};</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="780" refid="classdicomhero_1_1_data_handler_invalid_data_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_data_handler_invalid_data_error" kindref="compound">DataHandlerInvalidDataError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_handler_error" kindref="compound">DataHandlerError</ref></highlight></codeline>
<codeline lineno="781"><highlight class="normal">{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_handler_invalid_data_error" kindref="compound">DataHandlerInvalidDataError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_data_handler_invalid_data_error" kindref="compound">DataHandlerInvalidDataError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_handler_invalid_data_error" kindref="compound">DataHandlerInvalidDataError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_data_handler_invalid_data_error" kindref="compound">DataHandlerInvalidDataError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_handler_invalid_data_error" kindref="compound">DataHandlerInvalidDataError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_data_handler_invalid_data_error" kindref="compound">DataHandlerInvalidDataError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="795"><highlight class="normal">};</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="800" refid="classdicomhero_1_1_data_set_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_data_set_error" kindref="compound">DataSetError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::runtime_error</highlight></codeline>
<codeline lineno="801"><highlight class="normal">{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_error" kindref="compound">DataSetError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_data_set_error" kindref="compound">DataSetError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_error" kindref="compound">DataSetError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_data_set_error" kindref="compound">DataSetError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_error" kindref="compound">DataSetError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_data_set_error" kindref="compound">DataSetError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="815"><highlight class="normal">};</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="823" refid="classdicomhero_1_1_data_set_different_format_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_data_set_different_format_error" kindref="compound">DataSetDifferentFormatError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_error" kindref="compound">DataSetError</ref></highlight></codeline>
<codeline lineno="824"><highlight class="normal">{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_different_format_error" kindref="compound">DataSetDifferentFormatError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_data_set_different_format_error" kindref="compound">DataSetDifferentFormatError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_different_format_error" kindref="compound">DataSetDifferentFormatError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_data_set_different_format_error" kindref="compound">DataSetDifferentFormatError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_different_format_error" kindref="compound">DataSetDifferentFormatError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_data_set_different_format_error" kindref="compound">DataSetDifferentFormatError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="838"><highlight class="normal">};</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="845" refid="classdicomhero_1_1_data_set_unknown_transfer_syntax_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_data_set_unknown_transfer_syntax_error" kindref="compound">DataSetUnknownTransferSyntaxError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_error" kindref="compound">DataSetError</ref></highlight></codeline>
<codeline lineno="846"><highlight class="normal">{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_unknown_transfer_syntax_error" kindref="compound">DataSetUnknownTransferSyntaxError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_data_set_unknown_transfer_syntax_error" kindref="compound">DataSetUnknownTransferSyntaxError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_unknown_transfer_syntax_error" kindref="compound">DataSetUnknownTransferSyntaxError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_data_set_unknown_transfer_syntax_error" kindref="compound">DataSetUnknownTransferSyntaxError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_unknown_transfer_syntax_error" kindref="compound">DataSetUnknownTransferSyntaxError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_data_set_unknown_transfer_syntax_error" kindref="compound">DataSetUnknownTransferSyntaxError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="860"><highlight class="normal">};</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="870" refid="classdicomhero_1_1_data_set_wrong_frame_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_data_set_wrong_frame_error" kindref="compound">DataSetWrongFrameError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_error" kindref="compound">DataSetError</ref></highlight></codeline>
<codeline lineno="871"><highlight class="normal">{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_wrong_frame_error" kindref="compound">DataSetWrongFrameError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_data_set_wrong_frame_error" kindref="compound">DataSetWrongFrameError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_wrong_frame_error" kindref="compound">DataSetWrongFrameError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_data_set_wrong_frame_error" kindref="compound">DataSetWrongFrameError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_wrong_frame_error" kindref="compound">DataSetWrongFrameError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_data_set_wrong_frame_error" kindref="compound">DataSetWrongFrameError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="885"><highlight class="normal">};</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="892" refid="classdicomhero_1_1_data_set_image_doesnt_exist_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_data_set_image_doesnt_exist_error" kindref="compound">DataSetImageDoesntExistError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_error" kindref="compound">DataSetError</ref></highlight></codeline>
<codeline lineno="893"><highlight class="normal">{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_image_doesnt_exist_error" kindref="compound">DataSetImageDoesntExistError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_data_set_image_doesnt_exist_error" kindref="compound">DataSetImageDoesntExistError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_image_doesnt_exist_error" kindref="compound">DataSetImageDoesntExistError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_data_set_image_doesnt_exist_error" kindref="compound">DataSetImageDoesntExistError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_image_doesnt_exist_error" kindref="compound">DataSetImageDoesntExistError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_data_set_image_doesnt_exist_error" kindref="compound">DataSetImageDoesntExistError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="907"><highlight class="normal">};</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="913" refid="classdicomhero_1_1_data_set_image_palette_color_is_read_only" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_data_set_image_palette_color_is_read_only" kindref="compound">DataSetImagePaletteColorIsReadOnly</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_error" kindref="compound">DataSetError</ref></highlight></codeline>
<codeline lineno="914"><highlight class="normal">{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_image_palette_color_is_read_only" kindref="compound">DataSetImagePaletteColorIsReadOnly</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_data_set_image_palette_color_is_read_only" kindref="compound">DataSetImagePaletteColorIsReadOnly</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_image_palette_color_is_read_only" kindref="compound">DataSetImagePaletteColorIsReadOnly</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_data_set_image_palette_color_is_read_only" kindref="compound">DataSetImagePaletteColorIsReadOnly</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_image_palette_color_is_read_only" kindref="compound">DataSetImagePaletteColorIsReadOnly</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_data_set_image_palette_color_is_read_only" kindref="compound">DataSetImagePaletteColorIsReadOnly</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="928"><highlight class="normal">};</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="933" refid="classdicomhero_1_1_data_set_corrupted_offset_table_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_data_set_corrupted_offset_table_error" kindref="compound">DataSetCorruptedOffsetTableError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_error" kindref="compound">DataSetError</ref></highlight></codeline>
<codeline lineno="934"><highlight class="normal">{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_corrupted_offset_table_error" kindref="compound">DataSetCorruptedOffsetTableError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_data_set_corrupted_offset_table_error" kindref="compound">DataSetCorruptedOffsetTableError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_corrupted_offset_table_error" kindref="compound">DataSetCorruptedOffsetTableError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_data_set_corrupted_offset_table_error" kindref="compound">DataSetCorruptedOffsetTableError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_data_set_corrupted_offset_table_error" kindref="compound">DataSetCorruptedOffsetTableError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_data_set_corrupted_offset_table_error" kindref="compound">DataSetCorruptedOffsetTableError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="948"><highlight class="normal">};</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="956" refid="classdicomhero_1_1_dicom_dir_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_dicom_dir_error" kindref="compound">DicomDirError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::runtime_error</highlight></codeline>
<codeline lineno="957"><highlight class="normal">{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dicom_dir_error" kindref="compound">DicomDirError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_dicom_dir_error" kindref="compound">DicomDirError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dicom_dir_error" kindref="compound">DicomDirError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_dicom_dir_error" kindref="compound">DicomDirError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dicom_dir_error" kindref="compound">DicomDirError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_dicom_dir_error" kindref="compound">DicomDirError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="971"><highlight class="normal">};</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="980" refid="classdicomhero_1_1_dicom_dir_circular_reference_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_dicom_dir_circular_reference_error" kindref="compound">DicomDirCircularReferenceError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dicom_dir_error" kindref="compound">DicomDirError</ref></highlight></codeline>
<codeline lineno="981"><highlight class="normal">{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dicom_dir_circular_reference_error" kindref="compound">DicomDirCircularReferenceError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_dicom_dir_circular_reference_error" kindref="compound">DicomDirCircularReferenceError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dicom_dir_circular_reference_error" kindref="compound">DicomDirCircularReferenceError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_dicom_dir_circular_reference_error" kindref="compound">DicomDirCircularReferenceError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dicom_dir_circular_reference_error" kindref="compound">DicomDirCircularReferenceError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_dicom_dir_circular_reference_error" kindref="compound">DicomDirCircularReferenceError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="995"><highlight class="normal">};</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002" refid="classdicomhero_1_1_dicom_dir_no_entry_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_dicom_dir_no_entry_error" kindref="compound">DicomDirNoEntryError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dicom_dir_error" kindref="compound">DicomDirError</ref></highlight></codeline>
<codeline lineno="1003"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dicom_dir_no_entry_error" kindref="compound">DicomDirNoEntryError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_dicom_dir_no_entry_error" kindref="compound">DicomDirNoEntryError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dicom_dir_no_entry_error" kindref="compound">DicomDirNoEntryError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_dicom_dir_no_entry_error" kindref="compound">DicomDirNoEntryError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dicom_dir_no_entry_error" kindref="compound">DicomDirNoEntryError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_dicom_dir_no_entry_error" kindref="compound">DicomDirNoEntryError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023" refid="classdicomhero_1_1_image_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_image_error" kindref="compound">ImageError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::runtime_error</highlight></codeline>
<codeline lineno="1024"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_image_error" kindref="compound">ImageError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_image_error" kindref="compound">ImageError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_image_error" kindref="compound">ImageError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_image_error" kindref="compound">ImageError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_image_error" kindref="compound">ImageError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_image_error" kindref="compound">ImageError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044" refid="classdicomhero_1_1_image_unknown_depth_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_image_unknown_depth_error" kindref="compound">ImageUnknownDepthError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_image_error" kindref="compound">ImageError</ref></highlight></codeline>
<codeline lineno="1045"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_image_unknown_depth_error" kindref="compound">ImageUnknownDepthError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_image_unknown_depth_error" kindref="compound">ImageUnknownDepthError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_image_unknown_depth_error" kindref="compound">ImageUnknownDepthError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_image_unknown_depth_error" kindref="compound">ImageUnknownDepthError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_image_unknown_depth_error" kindref="compound">ImageUnknownDepthError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_image_unknown_depth_error" kindref="compound">ImageUnknownDepthError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066" refid="classdicomhero_1_1_image_unknown_color_space_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_image_unknown_color_space_error" kindref="compound">ImageUnknownColorSpaceError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_image_error" kindref="compound">ImageError</ref></highlight></codeline>
<codeline lineno="1067"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_image_unknown_color_space_error" kindref="compound">ImageUnknownColorSpaceError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_image_unknown_color_space_error" kindref="compound">ImageUnknownColorSpaceError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_image_unknown_color_space_error" kindref="compound">ImageUnknownColorSpaceError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_image_unknown_color_space_error" kindref="compound">ImageUnknownColorSpaceError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_image_unknown_color_space_error" kindref="compound">ImageUnknownColorSpaceError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_image_unknown_color_space_error" kindref="compound">ImageUnknownColorSpaceError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088" refid="classdicomhero_1_1_image_invalid_size_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_image_invalid_size_error" kindref="compound">ImageInvalidSizeError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_image_error" kindref="compound">ImageError</ref></highlight></codeline>
<codeline lineno="1089"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_image_invalid_size_error" kindref="compound">ImageInvalidSizeError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_image_invalid_size_error" kindref="compound">ImageInvalidSizeError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_image_invalid_size_error" kindref="compound">ImageInvalidSizeError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_image_invalid_size_error" kindref="compound">ImageInvalidSizeError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_image_invalid_size_error" kindref="compound">ImageInvalidSizeError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_image_invalid_size_error" kindref="compound">ImageInvalidSizeError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109" refid="classdicomhero_1_1_transform_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_transform_error" kindref="compound">TransformError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::runtime_error</highlight></codeline>
<codeline lineno="1110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_transform_error" kindref="compound">TransformError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_transform_error" kindref="compound">TransformError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_transform_error" kindref="compound">TransformError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_transform_error" kindref="compound">TransformError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_transform_error" kindref="compound">TransformError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_transform_error" kindref="compound">TransformError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130" refid="classdicomhero_1_1_transform_invalid_area_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_transform_invalid_area_error" kindref="compound">TransformInvalidAreaError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_transform_error" kindref="compound">TransformError</ref></highlight></codeline>
<codeline lineno="1131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_transform_invalid_area_error" kindref="compound">TransformInvalidAreaError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_transform_invalid_area_error" kindref="compound">TransformInvalidAreaError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_transform_invalid_area_error" kindref="compound">TransformInvalidAreaError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_transform_invalid_area_error" kindref="compound">TransformInvalidAreaError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_transform_invalid_area_error" kindref="compound">TransformInvalidAreaError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_transform_invalid_area_error" kindref="compound">TransformInvalidAreaError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152" refid="classdicomhero_1_1_transform_different_high_bit_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_transform_different_high_bit_error" kindref="compound">TransformDifferentHighBitError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_transform_error" kindref="compound">TransformError</ref></highlight></codeline>
<codeline lineno="1153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_transform_different_high_bit_error" kindref="compound">TransformDifferentHighBitError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_transform_different_high_bit_error" kindref="compound">TransformDifferentHighBitError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_transform_different_high_bit_error" kindref="compound">TransformDifferentHighBitError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_transform_different_high_bit_error" kindref="compound">TransformDifferentHighBitError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_transform_different_high_bit_error" kindref="compound">TransformDifferentHighBitError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_transform_different_high_bit_error" kindref="compound">TransformDifferentHighBitError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174" refid="classdicomhero_1_1_color_transform_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_color_transform_error" kindref="compound">ColorTransformError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_transform_error" kindref="compound">TransformError</ref></highlight></codeline>
<codeline lineno="1175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_color_transform_error" kindref="compound">ColorTransformError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_color_transform_error" kindref="compound">ColorTransformError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_color_transform_error" kindref="compound">ColorTransformError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_color_transform_error" kindref="compound">ColorTransformError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_color_transform_error" kindref="compound">ColorTransformError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_color_transform_error" kindref="compound">ColorTransformError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196" refid="classdicomhero_1_1_color_transform_wrong_color_space_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_color_transform_wrong_color_space_error" kindref="compound">ColorTransformWrongColorSpaceError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_color_transform_error" kindref="compound">ColorTransformError</ref></highlight></codeline>
<codeline lineno="1197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_color_transform_wrong_color_space_error" kindref="compound">ColorTransformWrongColorSpaceError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_color_transform_wrong_color_space_error" kindref="compound">ColorTransformWrongColorSpaceError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_color_transform_wrong_color_space_error" kindref="compound">ColorTransformWrongColorSpaceError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_color_transform_wrong_color_space_error" kindref="compound">ColorTransformWrongColorSpaceError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_color_transform_wrong_color_space_error" kindref="compound">ColorTransformWrongColorSpaceError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_color_transform_wrong_color_space_error" kindref="compound">ColorTransformWrongColorSpaceError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218" refid="classdicomhero_1_1_color_transforms_factory_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_color_transforms_factory_error" kindref="compound">ColorTransformsFactoryError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_transform_error" kindref="compound">TransformError</ref></highlight></codeline>
<codeline lineno="1219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_color_transforms_factory_error" kindref="compound">ColorTransformsFactoryError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_color_transforms_factory_error" kindref="compound">ColorTransformsFactoryError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_color_transforms_factory_error" kindref="compound">ColorTransformsFactoryError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_color_transforms_factory_error" kindref="compound">ColorTransformsFactoryError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_color_transforms_factory_error" kindref="compound">ColorTransformsFactoryError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_color_transforms_factory_error" kindref="compound">ColorTransformsFactoryError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241" refid="classdicomhero_1_1_color_transforms_factory_no_transform_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_color_transforms_factory_no_transform_error" kindref="compound">ColorTransformsFactoryNoTransformError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_color_transforms_factory_error" kindref="compound">ColorTransformsFactoryError</ref></highlight></codeline>
<codeline lineno="1242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_color_transforms_factory_no_transform_error" kindref="compound">ColorTransformsFactoryNoTransformError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_color_transforms_factory_no_transform_error" kindref="compound">ColorTransformsFactoryNoTransformError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_color_transforms_factory_no_transform_error" kindref="compound">ColorTransformsFactoryNoTransformError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_color_transforms_factory_no_transform_error" kindref="compound">ColorTransformsFactoryNoTransformError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_color_transforms_factory_no_transform_error" kindref="compound">ColorTransformsFactoryNoTransformError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_color_transforms_factory_no_transform_error" kindref="compound">ColorTransformsFactoryNoTransformError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/>TransformDifferentColorSpacesError:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_transform_error" kindref="compound">TransformError</ref></highlight></codeline>
<codeline lineno="1260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>TransformDifferentColorSpacesError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/>TransformDifferentColorSpacesError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TransformDifferentColorSpacesError&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>TransformDifferentColorSpacesError&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TransformDifferentColorSpacesError&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<sp/>TransformDifferentColorSpacesError()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281" refid="classdicomhero_1_1_stream_e_o_f_error" refkind="compound"><highlight class="normal">class<sp/>DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_stream_e_o_f_error" kindref="compound">StreamEOFError</ref><sp/>:<sp/>public<sp/><ref refid="classdicomhero_1_1_stream_error" kindref="compound">StreamError</ref></highlight></codeline>
<codeline lineno="1282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_stream_e_o_f_error" kindref="compound">StreamEOFError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_stream_e_o_f_error" kindref="compound">StreamEOFError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_stream_e_o_f_error" kindref="compound">StreamEOFError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_stream_e_o_f_error" kindref="compound">StreamEOFError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_stream_e_o_f_error" kindref="compound">StreamEOFError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_stream_e_o_f_error" kindref="compound">StreamEOFError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1302" refid="classdicomhero_1_1_stream_closed_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_stream_closed_error" kindref="compound">StreamClosedError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_stream_e_o_f_error" kindref="compound">StreamEOFError</ref></highlight></codeline>
<codeline lineno="1303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_stream_closed_error" kindref="compound">StreamClosedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_stream_closed_error" kindref="compound">StreamClosedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_stream_closed_error" kindref="compound">StreamClosedError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_stream_closed_error" kindref="compound">StreamClosedError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_stream_closed_error" kindref="compound">StreamClosedError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_stream_closed_error" kindref="compound">StreamClosedError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324" refid="classdicomhero_1_1_modality_v_o_i_l_u_t_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_modality_v_o_i_l_u_t_error" kindref="compound">ModalityVOILUTError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_transform_error" kindref="compound">TransformError</ref></highlight></codeline>
<codeline lineno="1325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_modality_v_o_i_l_u_t_error" kindref="compound">ModalityVOILUTError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_modality_v_o_i_l_u_t_error" kindref="compound">ModalityVOILUTError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_modality_v_o_i_l_u_t_error" kindref="compound">ModalityVOILUTError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_modality_v_o_i_l_u_t_error" kindref="compound">ModalityVOILUTError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_modality_v_o_i_l_u_t_error" kindref="compound">ModalityVOILUTError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_modality_v_o_i_l_u_t_error" kindref="compound">ModalityVOILUTError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346" refid="classdicomhero_1_1_dicom_codec_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_dicom_codec_error" kindref="compound">DicomCodecError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_codec_error" kindref="compound">CodecError</ref></highlight></codeline>
<codeline lineno="1347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dicom_codec_error" kindref="compound">DicomCodecError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_dicom_codec_error" kindref="compound">DicomCodecError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dicom_codec_error" kindref="compound">DicomCodecError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_dicom_codec_error" kindref="compound">DicomCodecError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dicom_codec_error" kindref="compound">DicomCodecError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_dicom_codec_error" kindref="compound">DicomCodecError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368" refid="classdicomhero_1_1_dicom_codec_depth_limit_reached_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_dicom_codec_depth_limit_reached_error" kindref="compound">DicomCodecDepthLimitReachedError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dicom_codec_error" kindref="compound">DicomCodecError</ref></highlight></codeline>
<codeline lineno="1369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dicom_codec_depth_limit_reached_error" kindref="compound">DicomCodecDepthLimitReachedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;message);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_dicom_codec_depth_limit_reached_error" kindref="compound">DicomCodecDepthLimitReachedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dicom_codec_depth_limit_reached_error" kindref="compound">DicomCodecDepthLimitReachedError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_dicom_codec_depth_limit_reached_error" kindref="compound">DicomCodecDepthLimitReachedError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dicom_codec_depth_limit_reached_error" kindref="compound">DicomCodecDepthLimitReachedError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_dicom_codec_depth_limit_reached_error" kindref="compound">DicomCodecDepthLimitReachedError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390" refid="classdicomhero_1_1_jpeg_codec_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_jpeg_codec_error" kindref="compound">JpegCodecError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_codec_error" kindref="compound">CodecError</ref></highlight></codeline>
<codeline lineno="1391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_jpeg_codec_error" kindref="compound">JpegCodecError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_jpeg_codec_error" kindref="compound">JpegCodecError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_jpeg_codec_error" kindref="compound">JpegCodecError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_jpeg_codec_error" kindref="compound">JpegCodecError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_jpeg_codec_error" kindref="compound">JpegCodecError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_jpeg_codec_error" kindref="compound">JpegCodecError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411" refid="classdicomhero_1_1_jpeg_codec_cannot_handle_syntax_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_jpeg_codec_cannot_handle_syntax_error" kindref="compound">JpegCodecCannotHandleSyntaxError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_jpeg_codec_error" kindref="compound">JpegCodecError</ref></highlight></codeline>
<codeline lineno="1412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_jpeg_codec_cannot_handle_syntax_error" kindref="compound">JpegCodecCannotHandleSyntaxError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_jpeg_codec_cannot_handle_syntax_error" kindref="compound">JpegCodecCannotHandleSyntaxError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_jpeg_codec_cannot_handle_syntax_error" kindref="compound">JpegCodecCannotHandleSyntaxError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_jpeg_codec_cannot_handle_syntax_error" kindref="compound">JpegCodecCannotHandleSyntaxError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_jpeg_codec_cannot_handle_syntax_error" kindref="compound">JpegCodecCannotHandleSyntaxError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_jpeg_codec_cannot_handle_syntax_error" kindref="compound">JpegCodecCannotHandleSyntaxError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/>DicomheroBadAlloc:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::bad_alloc</highlight></codeline>
<codeline lineno="1430"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>DicomheroBadAlloc();</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>DicomheroBadAlloc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DicomheroBadAlloc&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/>DicomheroBadAlloc&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DicomheroBadAlloc&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~DicomheroBadAlloc()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445" refid="classdicomhero_1_1_memory_error" refkind="compound"><highlight class="normal">class<sp/>DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_memory_error" kindref="compound">MemoryError</ref>:<sp/>public<sp/>std::runtime_error</highlight></codeline>
<codeline lineno="1446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_memory_error" kindref="compound">MemoryError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_memory_error" kindref="compound">MemoryError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_memory_error" kindref="compound">MemoryError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_memory_error" kindref="compound">MemoryError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_memory_error" kindref="compound">MemoryError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_memory_error" kindref="compound">MemoryError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467" refid="classdicomhero_1_1_memory_size_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_memory_size_error" kindref="compound">MemorySizeError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_memory_error" kindref="compound">MemoryError</ref></highlight></codeline>
<codeline lineno="1468"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_memory_size_error" kindref="compound">MemorySizeError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_memory_size_error" kindref="compound">MemorySizeError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_memory_size_error" kindref="compound">MemorySizeError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_memory_size_error" kindref="compound">MemorySizeError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_memory_size_error" kindref="compound">MemorySizeError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_memory_size_error" kindref="compound">MemorySizeError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488" refid="classdicomhero_1_1_acse_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_acse_error" kindref="compound">AcseError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::runtime_error</highlight></codeline>
<codeline lineno="1489"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_error" kindref="compound">AcseError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_error" kindref="compound">AcseError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_error" kindref="compound">AcseError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_error" kindref="compound">AcseError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_error" kindref="compound">AcseError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_acse_error" kindref="compound">AcseError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510" refid="classdicomhero_1_1_acse_corrupted_message_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_acse_corrupted_message_error" kindref="compound">AcseCorruptedMessageError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_error" kindref="compound">AcseError</ref></highlight></codeline>
<codeline lineno="1511"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_corrupted_message_error" kindref="compound">AcseCorruptedMessageError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_corrupted_message_error" kindref="compound">AcseCorruptedMessageError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_corrupted_message_error" kindref="compound">AcseCorruptedMessageError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_corrupted_message_error" kindref="compound">AcseCorruptedMessageError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_corrupted_message_error" kindref="compound">AcseCorruptedMessageError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_acse_corrupted_message_error" kindref="compound">AcseCorruptedMessageError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1533" refid="classdicomhero_1_1_acse_no_transfer_syntax_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_acse_no_transfer_syntax_error" kindref="compound">AcseNoTransferSyntaxError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_error" kindref="compound">AcseError</ref></highlight></codeline>
<codeline lineno="1534"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_no_transfer_syntax_error" kindref="compound">AcseNoTransferSyntaxError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_no_transfer_syntax_error" kindref="compound">AcseNoTransferSyntaxError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_no_transfer_syntax_error" kindref="compound">AcseNoTransferSyntaxError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_no_transfer_syntax_error" kindref="compound">AcseNoTransferSyntaxError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_no_transfer_syntax_error" kindref="compound">AcseNoTransferSyntaxError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_acse_no_transfer_syntax_error" kindref="compound">AcseNoTransferSyntaxError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1543"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551" refid="classdicomhero_1_1_acse_presentation_context_not_requested_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_acse_presentation_context_not_requested_error" kindref="compound">AcsePresentationContextNotRequestedError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_error" kindref="compound">AcseError</ref></highlight></codeline>
<codeline lineno="1552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_presentation_context_not_requested_error" kindref="compound">AcsePresentationContextNotRequestedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_presentation_context_not_requested_error" kindref="compound">AcsePresentationContextNotRequestedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_presentation_context_not_requested_error" kindref="compound">AcsePresentationContextNotRequestedError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_presentation_context_not_requested_error" kindref="compound">AcsePresentationContextNotRequestedError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_presentation_context_not_requested_error" kindref="compound">AcsePresentationContextNotRequestedError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_acse_presentation_context_not_requested_error" kindref="compound">AcsePresentationContextNotRequestedError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1573" refid="classdicomhero_1_1_acse_wrong_role_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_acse_wrong_role_error" kindref="compound">AcseWrongRoleError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_error" kindref="compound">AcseError</ref></highlight></codeline>
<codeline lineno="1574"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_wrong_role_error" kindref="compound">AcseWrongRoleError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_wrong_role_error" kindref="compound">AcseWrongRoleError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_wrong_role_error" kindref="compound">AcseWrongRoleError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_wrong_role_error" kindref="compound">AcseWrongRoleError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_wrong_role_error" kindref="compound">AcseWrongRoleError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_acse_wrong_role_error" kindref="compound">AcseWrongRoleError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1588"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595" refid="classdicomhero_1_1_acse_wrong_id_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_acse_wrong_id_error" kindref="compound">AcseWrongIdError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_error" kindref="compound">AcseError</ref></highlight></codeline>
<codeline lineno="1596"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_wrong_id_error" kindref="compound">AcseWrongIdError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_wrong_id_error" kindref="compound">AcseWrongIdError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_wrong_id_error" kindref="compound">AcseWrongIdError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_wrong_id_error" kindref="compound">AcseWrongIdError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_wrong_id_error" kindref="compound">AcseWrongIdError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_acse_wrong_id_error" kindref="compound">AcseWrongIdError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1605"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight></codeline>
<codeline lineno="1613" refid="classdicomhero_1_1_acse_wrong_response_id_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_acse_wrong_response_id_error" kindref="compound">AcseWrongResponseIdError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_wrong_id_error" kindref="compound">AcseWrongIdError</ref></highlight></codeline>
<codeline lineno="1614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_wrong_response_id_error" kindref="compound">AcseWrongResponseIdError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_wrong_response_id_error" kindref="compound">AcseWrongResponseIdError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_wrong_response_id_error" kindref="compound">AcseWrongResponseIdError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_wrong_response_id_error" kindref="compound">AcseWrongResponseIdError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_wrong_response_id_error" kindref="compound">AcseWrongResponseIdError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_acse_wrong_response_id_error" kindref="compound">AcseWrongResponseIdError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight></codeline>
<codeline lineno="1630" refid="classdicomhero_1_1_acse_wrong_command_id_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_acse_wrong_command_id_error" kindref="compound">AcseWrongCommandIdError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_wrong_id_error" kindref="compound">AcseWrongIdError</ref></highlight></codeline>
<codeline lineno="1631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_wrong_command_id_error" kindref="compound">AcseWrongCommandIdError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_wrong_command_id_error" kindref="compound">AcseWrongCommandIdError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_wrong_command_id_error" kindref="compound">AcseWrongCommandIdError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_wrong_command_id_error" kindref="compound">AcseWrongCommandIdError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_wrong_command_id_error" kindref="compound">AcseWrongCommandIdError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_acse_wrong_command_id_error" kindref="compound">AcseWrongCommandIdError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1640"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647" refid="classdicomhero_1_1_acse_rejected_association_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_acse_rejected_association_error" kindref="compound">AcseRejectedAssociationError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_error" kindref="compound">AcseError</ref></highlight></codeline>
<codeline lineno="1648"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_rejected_association_error" kindref="compound">AcseRejectedAssociationError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bPermanent);</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_rejected_association_error" kindref="compound">AcseRejectedAssociationError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_rejected_association_error" kindref="compound">AcseRejectedAssociationError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_rejected_association_error" kindref="compound">AcseRejectedAssociationError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_rejected_association_error" kindref="compound">AcseRejectedAssociationError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_acse_rejected_association_error" kindref="compound">AcseRejectedAssociationError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isPermanent()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isTemporary()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>m_bPermanent;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight></codeline>
<codeline lineno="1683" refid="classdicomhero_1_1_acse_s_c_u_no_reason_given_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_acse_s_c_u_no_reason_given_error" kindref="compound">AcseSCUNoReasonGivenError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_rejected_association_error" kindref="compound">AcseRejectedAssociationError</ref></highlight></codeline>
<codeline lineno="1684"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_u_no_reason_given_error" kindref="compound">AcseSCUNoReasonGivenError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bPermanent);</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_s_c_u_no_reason_given_error" kindref="compound">AcseSCUNoReasonGivenError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_u_no_reason_given_error" kindref="compound">AcseSCUNoReasonGivenError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_s_c_u_no_reason_given_error" kindref="compound">AcseSCUNoReasonGivenError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_u_no_reason_given_error" kindref="compound">AcseSCUNoReasonGivenError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_acse_s_c_u_no_reason_given_error" kindref="compound">AcseSCUNoReasonGivenError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight></codeline>
<codeline lineno="1701" refid="classdicomhero_1_1_acse_s_c_u_application_context_name_not_supported_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_acse_s_c_u_application_context_name_not_supported_error" kindref="compound">AcseSCUApplicationContextNameNotSupportedError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_rejected_association_error" kindref="compound">AcseRejectedAssociationError</ref></highlight></codeline>
<codeline lineno="1702"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_u_application_context_name_not_supported_error" kindref="compound">AcseSCUApplicationContextNameNotSupportedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bPermanent);</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_s_c_u_application_context_name_not_supported_error" kindref="compound">AcseSCUApplicationContextNameNotSupportedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_u_application_context_name_not_supported_error" kindref="compound">AcseSCUApplicationContextNameNotSupportedError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_s_c_u_application_context_name_not_supported_error" kindref="compound">AcseSCUApplicationContextNameNotSupportedError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_u_application_context_name_not_supported_error" kindref="compound">AcseSCUApplicationContextNameNotSupportedError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_acse_s_c_u_application_context_name_not_supported_error" kindref="compound">AcseSCUApplicationContextNameNotSupportedError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"></highlight></codeline>
<codeline lineno="1719" refid="classdicomhero_1_1_acse_s_c_u_calling_a_e_t_not_recognized_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_acse_s_c_u_calling_a_e_t_not_recognized_error" kindref="compound">AcseSCUCallingAETNotRecognizedError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_rejected_association_error" kindref="compound">AcseRejectedAssociationError</ref></highlight></codeline>
<codeline lineno="1720"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_u_calling_a_e_t_not_recognized_error" kindref="compound">AcseSCUCallingAETNotRecognizedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bPermanent);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_s_c_u_calling_a_e_t_not_recognized_error" kindref="compound">AcseSCUCallingAETNotRecognizedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_u_calling_a_e_t_not_recognized_error" kindref="compound">AcseSCUCallingAETNotRecognizedError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_s_c_u_calling_a_e_t_not_recognized_error" kindref="compound">AcseSCUCallingAETNotRecognizedError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_u_calling_a_e_t_not_recognized_error" kindref="compound">AcseSCUCallingAETNotRecognizedError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_acse_s_c_u_calling_a_e_t_not_recognized_error" kindref="compound">AcseSCUCallingAETNotRecognizedError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight></codeline>
<codeline lineno="1737" refid="classdicomhero_1_1_acse_s_c_u_called_a_e_t_not_recognized_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_acse_s_c_u_called_a_e_t_not_recognized_error" kindref="compound">AcseSCUCalledAETNotRecognizedError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_rejected_association_error" kindref="compound">AcseRejectedAssociationError</ref></highlight></codeline>
<codeline lineno="1738"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_u_called_a_e_t_not_recognized_error" kindref="compound">AcseSCUCalledAETNotRecognizedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bPermanent);</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_s_c_u_called_a_e_t_not_recognized_error" kindref="compound">AcseSCUCalledAETNotRecognizedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_u_called_a_e_t_not_recognized_error" kindref="compound">AcseSCUCalledAETNotRecognizedError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_s_c_u_called_a_e_t_not_recognized_error" kindref="compound">AcseSCUCalledAETNotRecognizedError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_u_called_a_e_t_not_recognized_error" kindref="compound">AcseSCUCalledAETNotRecognizedError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_acse_s_c_u_called_a_e_t_not_recognized_error" kindref="compound">AcseSCUCalledAETNotRecognizedError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1747"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight></codeline>
<codeline lineno="1755" refid="classdicomhero_1_1_acse_s_c_p_no_reason_given_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_acse_s_c_p_no_reason_given_error" kindref="compound">AcseSCPNoReasonGivenError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_rejected_association_error" kindref="compound">AcseRejectedAssociationError</ref></highlight></codeline>
<codeline lineno="1756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_no_reason_given_error" kindref="compound">AcseSCPNoReasonGivenError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bPermanent);</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_no_reason_given_error" kindref="compound">AcseSCPNoReasonGivenError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_no_reason_given_error" kindref="compound">AcseSCPNoReasonGivenError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_no_reason_given_error" kindref="compound">AcseSCPNoReasonGivenError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_no_reason_given_error" kindref="compound">AcseSCPNoReasonGivenError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_acse_s_c_p_no_reason_given_error" kindref="compound">AcseSCPNoReasonGivenError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight></codeline>
<codeline lineno="1773" refid="classdicomhero_1_1_acse_s_c_p_acse_protocol_version_not_supported_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_acse_s_c_p_acse_protocol_version_not_supported_error" kindref="compound">AcseSCPAcseProtocolVersionNotSupportedError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_rejected_association_error" kindref="compound">AcseRejectedAssociationError</ref></highlight></codeline>
<codeline lineno="1774"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_acse_protocol_version_not_supported_error" kindref="compound">AcseSCPAcseProtocolVersionNotSupportedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bPermanent);</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_acse_protocol_version_not_supported_error" kindref="compound">AcseSCPAcseProtocolVersionNotSupportedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_acse_protocol_version_not_supported_error" kindref="compound">AcseSCPAcseProtocolVersionNotSupportedError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_acse_protocol_version_not_supported_error" kindref="compound">AcseSCPAcseProtocolVersionNotSupportedError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_acse_protocol_version_not_supported_error" kindref="compound">AcseSCPAcseProtocolVersionNotSupportedError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_acse_s_c_p_acse_protocol_version_not_supported_error" kindref="compound">AcseSCPAcseProtocolVersionNotSupportedError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1783"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight></codeline>
<codeline lineno="1791" refid="classdicomhero_1_1_acse_s_c_p_presentation_reserved_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_acse_s_c_p_presentation_reserved_error" kindref="compound">AcseSCPPresentationReservedError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_rejected_association_error" kindref="compound">AcseRejectedAssociationError</ref></highlight></codeline>
<codeline lineno="1792"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_presentation_reserved_error" kindref="compound">AcseSCPPresentationReservedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bPermanent);</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_presentation_reserved_error" kindref="compound">AcseSCPPresentationReservedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_presentation_reserved_error" kindref="compound">AcseSCPPresentationReservedError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_presentation_reserved_error" kindref="compound">AcseSCPPresentationReservedError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_presentation_reserved_error" kindref="compound">AcseSCPPresentationReservedError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_acse_s_c_p_presentation_reserved_error" kindref="compound">AcseSCPPresentationReservedError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight></codeline>
<codeline lineno="1809" refid="classdicomhero_1_1_acse_s_c_p_presentation_temporary_congestion_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_acse_s_c_p_presentation_temporary_congestion_error" kindref="compound">AcseSCPPresentationTemporaryCongestionError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_rejected_association_error" kindref="compound">AcseRejectedAssociationError</ref></highlight></codeline>
<codeline lineno="1810"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_presentation_temporary_congestion_error" kindref="compound">AcseSCPPresentationTemporaryCongestionError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bPermanent);</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_presentation_temporary_congestion_error" kindref="compound">AcseSCPPresentationTemporaryCongestionError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_presentation_temporary_congestion_error" kindref="compound">AcseSCPPresentationTemporaryCongestionError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_presentation_temporary_congestion_error" kindref="compound">AcseSCPPresentationTemporaryCongestionError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_presentation_temporary_congestion_error" kindref="compound">AcseSCPPresentationTemporaryCongestionError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_acse_s_c_p_presentation_temporary_congestion_error" kindref="compound">AcseSCPPresentationTemporaryCongestionError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1819"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1827" refid="classdicomhero_1_1_acse_s_c_p_presentation_local_limit_exceded_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_acse_s_c_p_presentation_local_limit_exceded_error" kindref="compound">AcseSCPPresentationLocalLimitExcededError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_rejected_association_error" kindref="compound">AcseRejectedAssociationError</ref></highlight></codeline>
<codeline lineno="1828"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_presentation_local_limit_exceded_error" kindref="compound">AcseSCPPresentationLocalLimitExcededError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bPermanent);</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_presentation_local_limit_exceded_error" kindref="compound">AcseSCPPresentationLocalLimitExcededError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_presentation_local_limit_exceded_error" kindref="compound">AcseSCPPresentationLocalLimitExcededError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_presentation_local_limit_exceded_error" kindref="compound">AcseSCPPresentationLocalLimitExcededError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_s_c_p_presentation_local_limit_exceded_error" kindref="compound">AcseSCPPresentationLocalLimitExcededError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_acse_s_c_p_presentation_local_limit_exceded_error" kindref="compound">AcseSCPPresentationLocalLimitExcededError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1837"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1845" refid="classdicomhero_1_1_acse_too_many_operations_performed_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_acse_too_many_operations_performed_error" kindref="compound">AcseTooManyOperationsPerformedError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_error" kindref="compound">AcseError</ref></highlight></codeline>
<codeline lineno="1846"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_too_many_operations_performed_error" kindref="compound">AcseTooManyOperationsPerformedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_too_many_operations_performed_error" kindref="compound">AcseTooManyOperationsPerformedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_too_many_operations_performed_error" kindref="compound">AcseTooManyOperationsPerformedError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_too_many_operations_performed_error" kindref="compound">AcseTooManyOperationsPerformedError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_too_many_operations_performed_error" kindref="compound">AcseTooManyOperationsPerformedError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_acse_too_many_operations_performed_error" kindref="compound">AcseTooManyOperationsPerformedError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1855"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight></codeline>
<codeline lineno="1863" refid="classdicomhero_1_1_acse_too_many_operations_invoked_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_acse_too_many_operations_invoked_error" kindref="compound">AcseTooManyOperationsInvokedError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_error" kindref="compound">AcseError</ref></highlight></codeline>
<codeline lineno="1864"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_too_many_operations_invoked_error" kindref="compound">AcseTooManyOperationsInvokedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_too_many_operations_invoked_error" kindref="compound">AcseTooManyOperationsInvokedError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_too_many_operations_invoked_error" kindref="compound">AcseTooManyOperationsInvokedError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_too_many_operations_invoked_error" kindref="compound">AcseTooManyOperationsInvokedError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_too_many_operations_invoked_error" kindref="compound">AcseTooManyOperationsInvokedError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_acse_too_many_operations_invoked_error" kindref="compound">AcseTooManyOperationsInvokedError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1873"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"></highlight></codeline>
<codeline lineno="1881" refid="classdicomhero_1_1_acse_no_payload_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_acse_no_payload_error" kindref="compound">AcseNoPayloadError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_error" kindref="compound">AcseError</ref></highlight></codeline>
<codeline lineno="1882"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_no_payload_error" kindref="compound">AcseNoPayloadError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_no_payload_error" kindref="compound">AcseNoPayloadError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_no_payload_error" kindref="compound">AcseNoPayloadError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_acse_no_payload_error" kindref="compound">AcseNoPayloadError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_acse_no_payload_error" kindref="compound">AcseNoPayloadError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_acse_no_payload_error" kindref="compound">AcseNoPayloadError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1891"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"></highlight></codeline>
<codeline lineno="1898" refid="classdicomhero_1_1_dimse_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_dimse_error" kindref="compound">DimseError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::runtime_error</highlight></codeline>
<codeline lineno="1899"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dimse_error" kindref="compound">DimseError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_dimse_error" kindref="compound">DimseError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dimse_error" kindref="compound">DimseError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_dimse_error" kindref="compound">DimseError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dimse_error" kindref="compound">DimseError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_dimse_error" kindref="compound">DimseError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight></codeline>
<codeline lineno="1915" refid="classdicomhero_1_1_dimse_invalid_command" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_dimse_invalid_command" kindref="compound">DimseInvalidCommand</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dimse_error" kindref="compound">DimseError</ref></highlight></codeline>
<codeline lineno="1916"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dimse_invalid_command" kindref="compound">DimseInvalidCommand</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_dimse_invalid_command" kindref="compound">DimseInvalidCommand</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dimse_invalid_command" kindref="compound">DimseInvalidCommand</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_dimse_invalid_command" kindref="compound">DimseInvalidCommand</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_dimse_invalid_command" kindref="compound">DimseInvalidCommand</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_dimse_invalid_command" kindref="compound">DimseInvalidCommand</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1925"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight></codeline>
<codeline lineno="1932" refid="classdicomhero_1_1_u_i_d_generator_error" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_u_i_d_generator_error" kindref="compound">UIDGeneratorError</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::runtime_error</highlight></codeline>
<codeline lineno="1933"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_u_i_d_generator_error" kindref="compound">UIDGeneratorError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_u_i_d_generator_error" kindref="compound">UIDGeneratorError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_u_i_d_generator_error" kindref="compound">UIDGeneratorError</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_u_i_d_generator_error" kindref="compound">UIDGeneratorError</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_u_i_d_generator_error" kindref="compound">UIDGeneratorError</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_u_i_d_generator_error" kindref="compound">UIDGeneratorError</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1942"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight></codeline>
<codeline lineno="1949" refid="classdicomhero_1_1_non_registered_u_i_d_generator" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DICOMHERO_API<sp/><ref refid="classdicomhero_1_1_non_registered_u_i_d_generator" kindref="compound">NonRegisteredUIDGenerator</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_u_i_d_generator_error" kindref="compound">UIDGeneratorError</ref></highlight></codeline>
<codeline lineno="1950"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_non_registered_u_i_d_generator" kindref="compound">NonRegisteredUIDGenerator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>message);</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_non_registered_u_i_d_generator" kindref="compound">NonRegisteredUIDGenerator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_non_registered_u_i_d_generator" kindref="compound">NonRegisteredUIDGenerator</ref>&amp;<sp/>source);</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdicomhero_1_1_non_registered_u_i_d_generator" kindref="compound">NonRegisteredUIDGenerator</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdicomhero_1_1_non_registered_u_i_d_generator" kindref="compound">NonRegisteredUIDGenerator</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdicomhero_1_1_non_registered_u_i_d_generator" kindref="compound">NonRegisteredUIDGenerator</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1959"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!defined(imebraExceptions__INCLUDED_)</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/opt/atlassian/pipelines/agent/build/dicomheroCore6/library/include/dicomhero6/exceptions.h"/>
  </compounddef>
</doxygen>
